local notload = true
if notload == true then return end
if game.PlaceId ~= 155615604 then print("Incompatible game, script made for Prison Life") return end

if SYNAPTIC_LOADED then
	return
end

local Wait = game:GetService("Workspace"):WaitForChild("Prison_Administration"):WaitForChild("furniture_office2"):WaitForChild("painting"):WaitForChild("Part")

local a123912iidnasoidj = false
if game.Players.LocalPlayer:GetRankInGroup(14023631) > 2 then
	a123912iidnasoidj = true
end

if a123912iidnasoidj == false then return end

pcall(function() getgenv().SYNAPTIC_LOADED  = true end)
-- New SYNAPTIC script (Ghxst ADMIN- 2)
local ADMINLOADED = false
local ADMINLOADED2 = true

local ScreenGui = Instance.new("ScreenGui")

ScreenGui.Parent = game:WaitForChild("CoreGui")

-- BAR & Instances:

local GUI = {
	BAR = {
		Bar = Instance.new("Frame"),
		cmdbar21 = Instance.new("TextLabel"),
		D1 = Instance.new("Frame"),
		UICorner1 = Instance.new("UICorner"),
		cmdbar11 = Instance.new("TextBox"),
	},
	
	CMDGUI = {
		CommandsGUI = Instance.new("Frame"),
		D2 = Instance.new("Frame"),
		UICorner = Instance.new("UICorner"),
		SF2 = Instance.new("ScrollingFrame"),
		UIListLayout2 = Instance.new("UIListLayout"),
		TextLabel = Instance.new("TextLabel"),
		TB2 = Instance.new("TextBox"),
		TL2 = Instance.new("TextLabel"),
		Val = Instance.new("StringValue")
	},
	
	OUTPUT = {
		Output = Instance.new("Frame"),
		UIListLayout3 = Instance.new("UIListLayout"),
		O3 = Instance.new("TextLabel")
	},
	WELCOMEGUI = {
		Welcome = Instance.new("Frame"),
		D4 = Instance.new("Frame"),
		UICorner4 = Instance.new("UICorner"),
		T4 = Instance.new("TextLabel"),
		C4 = Instance.new("TextLabel"),
	    L4 = Instance.new("TextLabel"),
		T14 = Instance.new("TextLabel"),
		T24 = Instance.new("TextLabel"),
		T34 = Instance.new("TextLabel"),
		L14 = Instance.new("Frame"),
		L24 = Instance.new("Frame"),
		Fade4 = Instance.new("Frame")

	},
	LOGS = {
		Logs = Instance.new("Frame"),
		D5 = Instance.new("Frame"),
		UICorner = Instance.new("UICorner"),
		SF5 = Instance.new("ScrollingFrame"),
		UIListLayout2 = Instance.new("UIListLayout"),
		TextLabel = Instance.new("TextLabel"),
		TL5 = Instance.new("TextLabel"),
		CB5 = Instance.new("TextButton"),
	},
	FAVORITE_COLOR = Color3.fromRGB(85, 255, 127),
	ANTIVOID = Instance.new("Part",game.Workspace),
	CRIMING_PART = Instance.new("Part", game.Workspace),
	FadeFrameFake = Instance.new("Frame")
	
}

GUI.FadeFrameFake.Name = "FadeFrameFake"
GUI.FadeFrameFake.Parent = ScreenGui
GUI.FadeFrameFake.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
GUI.FadeFrameFake.BackgroundTransparency = 1.000
GUI.FadeFrameFake.Size = UDim2.new(0, 1929, 0, 1500)

GUI.CRIMING_PART.Position = Vector3.new(734.65, 179.5, 2538.65)
GUI.CRIMING_PART.Size = Vector3.new(23.1, 2.8, 22.1)
GUI.CRIMING_PART.Transparency = 1
GUI.CRIMING_PART.Anchored = true

GUI.ANTIVOID.Anchored = true 
GUI.ANTIVOID.Position = Vector3.new(-128, -418, 2048)
GUI.ANTIVOID.Size = Vector3.new(1000,20,1000)
GUI.ANTIVOID.Material = Enum.Material.Grass
GUI.ANTIVOID.Color = Color3.fromRGB(104, 255, 141)

--Properties:

GUI.BAR.Bar.Name = "Bar"
GUI.BAR.Bar.Parent = ScreenGui
GUI.BAR.Bar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
GUI.BAR.Bar.BorderSizePixel = 0
GUI.BAR.Bar.ClipsDescendants = true
GUI.BAR.Bar.Position = UDim2.new(-0.500, 0, 0, 910)
GUI.BAR.Bar.Size = UDim2.new(0, 154, 0, 47)

GUI.BAR.cmdbar21.Name = "cmdbar21"
GUI.BAR.cmdbar21.Parent = GUI.BAR.Bar
GUI.BAR.cmdbar21.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
GUI.BAR.cmdbar21.BackgroundTransparency = 1.000
GUI.BAR.cmdbar21.Position = UDim2.new(0.0736189932, 0, 0.255594462, 0)
GUI.BAR.cmdbar21.Size = UDim2.new(0, 130, 0, 26)
GUI.BAR.cmdbar21.Font = Enum.Font.SourceSansItalic
GUI.BAR.cmdbar21.Text = "Type command here.."
GUI.BAR.cmdbar21.TextColor3 = Color3.fromRGB(157, 157, 157)
GUI.BAR.cmdbar21.TextSize = 14.000
GUI.BAR.cmdbar21.TextXAlignment = Enum.TextXAlignment.Left
GUI.BAR.cmdbar21.Visible = false

GUI.BAR.D1.Name = "D1"
GUI.BAR.D1.Parent = GUI.BAR.Bar
GUI.BAR.D1.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.BAR.D1.Position = UDim2.new(0.0349980555, 0, 0.193381459, 0)
GUI.BAR.D1.Size = UDim2.new(0, 142, 0, 3)

GUI.BAR.UICorner1.Name = "UICorner1"
GUI.BAR.UICorner1.Parent = GUI.BAR.D1

GUI.BAR.cmdbar11.Name = "cmdbar11"
GUI.BAR.cmdbar11.Parent = GUI.BAR.Bar
GUI.BAR.cmdbar11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.BAR.cmdbar11.BackgroundTransparency = 1.000
GUI.BAR.cmdbar11.BorderSizePixel = 0
GUI.BAR.cmdbar11.Position = UDim2.new(0.0736634955, 0, 0.266593784, 0)
GUI.BAR.cmdbar11.Size = UDim2.new(0, 130, 0, 26)
GUI.BAR.cmdbar11.Font = Enum.Font.SourceSansBold
GUI.BAR.cmdbar11.Text = " "
GUI.BAR.cmdbar11.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.BAR.cmdbar11.TextSize = 14.000
GUI.BAR.cmdbar11.TextXAlignment = Enum.TextXAlignment.Left

-- COMMANDS

GUI.CMDGUI.CommandsGUI.Name = "CommandsGUI"
GUI.CMDGUI.CommandsGUI.Parent = ScreenGui
GUI.CMDGUI.CommandsGUI.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
GUI.CMDGUI.CommandsGUI.BorderSizePixel = 0
GUI.CMDGUI.CommandsGUI.ClipsDescendants = true
GUI.CMDGUI.CommandsGUI.Position = UDim2.new(-0.500, 0, 0, 673)
GUI.CMDGUI.CommandsGUI.Size = UDim2.new(0, 154, 0, 229)

GUI.CMDGUI.D2.Name = "D2"
GUI.CMDGUI.D2.Parent = GUI.CMDGUI.CommandsGUI
GUI.CMDGUI.D2.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.CMDGUI.D2.Position = UDim2.new(0.034998063, 0, 0.123440005, 0)
GUI.CMDGUI.D2.Size = UDim2.new(0, 142, 0, 2)

GUI.CMDGUI.UICorner.Parent = GUI.CMDGUI.D2

GUI.CMDGUI.SF2.Name = "SF2"
GUI.CMDGUI.SF2.Parent = GUI.CMDGUI.CommandsGUI
GUI.CMDGUI.SF2.Active = true
GUI.CMDGUI.SF2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.CMDGUI.SF2.BackgroundTransparency = 1.000
GUI.CMDGUI.SF2.BorderSizePixel = 0
GUI.CMDGUI.SF2.Position = UDim2.new(0.00581023004, 0, 0.14209491, 0)
GUI.CMDGUI.SF2.Size = UDim2.new(0, 153,0, 187)
GUI.CMDGUI.SF2.ScrollBarThickness = 1

GUI.CMDGUI.UIListLayout2.Name = "UIListLayout2"
GUI.CMDGUI.UIListLayout2.Parent = GUI.CMDGUI.SF2
GUI.CMDGUI.UIListLayout2.HorizontalAlignment = Enum.HorizontalAlignment.Center
GUI.CMDGUI.UIListLayout2.SortOrder = Enum.SortOrder.LayoutOrder

GUI.CMDGUI.TextLabel.Parent = nil
GUI.CMDGUI.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.CMDGUI.TextLabel.BackgroundTransparency = 1.000
GUI.CMDGUI.TextLabel.Position = UDim2.new(0.0620915033, 0, 0, 0)
GUI.CMDGUI.TextLabel.Size = UDim2.new(0, 134, 0, 13)
GUI.CMDGUI.TextLabel.Font = Enum.Font.SourceSansBold
GUI.CMDGUI.TextLabel.Text = ""
GUI.CMDGUI.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.CMDGUI.TextLabel.TextSize = 12.000
GUI.CMDGUI.TextLabel.TextXAlignment = Enum.TextXAlignment.Left

GUI.CMDGUI.TB2.Name = "TB2"
GUI.CMDGUI.TB2.Parent = GUI.CMDGUI.CommandsGUI
GUI.CMDGUI.TB2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
GUI.CMDGUI.TB2.BackgroundTransparency = 1.000
GUI.CMDGUI.TB2.Position = UDim2.new(0.097402595, 0, 0.0305676851, 0)
GUI.CMDGUI.TB2.Size = UDim2.new(0, 122, 0, 10)
GUI.CMDGUI.TB2.Font = Enum.Font.SourceSansBold
GUI.CMDGUI.TB2.Text = ""
GUI.CMDGUI.TB2.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.CMDGUI.TB2.TextSize = 14.000
GUI.CMDGUI.TB2.TextXAlignment = Enum.TextXAlignment.Left

GUI.CMDGUI.TL2.Name = "TL2"
GUI.CMDGUI.TL2.Parent = GUI.CMDGUI.CommandsGUI
GUI.CMDGUI.TL2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.CMDGUI.TL2.BackgroundTransparency = 1.000
GUI.CMDGUI.TL2.Position = UDim2.new(0.0970000029, 0, 0.0309999995, 0)
GUI.CMDGUI.TL2.Size = UDim2.new(0, 122, 0, 13)
GUI.CMDGUI.TL2.Font = Enum.Font.SourceSansItalic
GUI.CMDGUI.TL2.Text = "Search command.."
GUI.CMDGUI.TL2.TextColor3 = Color3.fromRGB(157, 157, 157)
GUI.CMDGUI.TL2.TextSize = 14.000
GUI.CMDGUI.TL2.TextXAlignment = Enum.TextXAlignment.Left

GUI.CMDGUI.Val.Parent = GUI.CMDGUI.TextLabel
-- OUTPUT

GUI.OUTPUT.Output.Name = "Output"
GUI.OUTPUT.Output.Parent = ScreenGui
GUI.OUTPUT.Output.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.OUTPUT.Output.BackgroundTransparency = 1.000
GUI.OUTPUT.Output.ClipsDescendants = true
GUI.OUTPUT.Output.Position = UDim2.new(0.00476520462, 0, 0.384049028, 0)
GUI.OUTPUT.Output.Size = UDim2.new(0, 1177, 0, 209)

GUI.OUTPUT.UIListLayout3.Name = "UIListLayout3"
GUI.OUTPUT.UIListLayout3.Parent = GUI.OUTPUT.Output
GUI.OUTPUT.UIListLayout3.SortOrder = Enum.SortOrder.LayoutOrder

GUI.OUTPUT.O3.Name = "O3"
GUI.OUTPUT.O3.Parent = nil
GUI.OUTPUT.O3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.OUTPUT.O3.BackgroundTransparency = 1.000
GUI.OUTPUT.O3.Position = UDim2.new(0.0322854705, 0, 0.191387564, 0)
GUI.OUTPUT.O3.Size = UDim2.new(0, 1162, 0, 13)
GUI.OUTPUT.O3.Font = Enum.Font.SourceSansBold
GUI.OUTPUT.O3.Text = "<*> Welcome to GHXST"
GUI.OUTPUT.O3.TextColor3 = Color3.fromRGB(85, 255, 127)
GUI.OUTPUT.O3.TextSize = 15.000
GUI.OUTPUT.O3.TextStrokeTransparency = 0.75
GUI.OUTPUT.O3.TextWrapped = true
GUI.OUTPUT.O3.TextXAlignment = Enum.TextXAlignment.Left

GUI.WELCOMEGUI.Welcome.Name = "Welcome"
GUI.WELCOMEGUI.Welcome.Parent = ScreenGui
GUI.WELCOMEGUI.Welcome.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
GUI.WELCOMEGUI.Welcome.BorderSizePixel = 0
GUI.WELCOMEGUI.Welcome.ClipsDescendants = true
GUI.WELCOMEGUI.Welcome.Position = UDim2.new(0.421, 0,0.384, 0)
GUI.WELCOMEGUI.Welcome.Size = UDim2.new(0, 303, 0, 3)

GUI.WELCOMEGUI.D4.Name = "D4"
GUI.WELCOMEGUI.D4.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.D4.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.WELCOMEGUI.D4.Position = UDim2.new(0.0154233621, 0, 0.175729513, 0)
GUI.WELCOMEGUI.D4.Size = UDim2.new(0, 292, 0, 2)

GUI.WELCOMEGUI.UICorner4.Name = "UICorner4"
GUI.WELCOMEGUI.UICorner4.Parent = GUI.WELCOMEGUI.D4

GUI.WELCOMEGUI.T4.Name = "T4"
GUI.WELCOMEGUI.T4.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.T4.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.WELCOMEGUI.T4.BackgroundTransparency = 1.000
GUI.WELCOMEGUI.T4.Size = UDim2.new(0, 303, 0, 15)
GUI.WELCOMEGUI.T4.Font = Enum.Font.FredokaOne
GUI.WELCOMEGUI.T4.Text = "GHXST"
GUI.WELCOMEGUI.T4.TextColor3 = GUI.FAVORITE_COLOR
GUI.WELCOMEGUI.T4.TextSize = 16.000

GUI.WELCOMEGUI.C4.Name = "C4"
GUI.WELCOMEGUI.C4.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.C4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.C4.BackgroundTransparency = 1.000
GUI.WELCOMEGUI.C4.Position = UDim2.new(0.676567674, 0, 0.204034373, 0)
GUI.WELCOMEGUI.C4.Size = UDim2.new(0, 98, 0, 12)
GUI.WELCOMEGUI.C4.Font = Enum.Font.SourceSansBold
GUI.WELCOMEGUI.C4.Text = "Made by Ghxst#9214"
GUI.WELCOMEGUI.C4.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.C4.TextSize = 11.000
GUI.WELCOMEGUI.C4.TextXAlignment = Enum.TextXAlignment.Left

GUI.WELCOMEGUI.L4.Name = "L4"
GUI.WELCOMEGUI.L4.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.L4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.L4.BackgroundTransparency = 1.000
GUI.WELCOMEGUI.L4.Position = UDim2.new(0.145214528, 0, 0.730058074, 0)
GUI.WELCOMEGUI.L4.Size = UDim2.new(0, 215, 0, 13)
GUI.WELCOMEGUI.L4.Font = Enum.Font.SourceSansBold
GUI.WELCOMEGUI.L4.Text = "Loading assets"
GUI.WELCOMEGUI.L4.TextColor3 = Color3.fromRGB(223, 223, 223)
GUI.WELCOMEGUI.L4.TextSize = 13.000

GUI.WELCOMEGUI.T14.Name = "T14"
GUI.WELCOMEGUI.T14.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.T14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.T14.BackgroundTransparency = 1.000
GUI.WELCOMEGUI.T14.Position = UDim2.new(0.0528052822, 0, 0.223013654, 0)
GUI.WELCOMEGUI.T14.Size = UDim2.new(0, 174, 0, 10)
GUI.WELCOMEGUI.T14.Font = Enum.Font.SourceSansBold
GUI.WELCOMEGUI.T14.Text = "Use \".\" to open command bar"
GUI.WELCOMEGUI.T14.TextColor3 = Color3.fromRGB(152, 152, 152)
GUI.WELCOMEGUI.T14.TextSize = 13.000
GUI.WELCOMEGUI.T14.TextXAlignment = Enum.TextXAlignment.Left

GUI.WELCOMEGUI.T24.Name = "T24"
GUI.WELCOMEGUI.T24.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.T24.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.T24.BackgroundTransparency = 1.000
GUI.WELCOMEGUI.T24.Position = UDim2.new(0.0528052822, 0, 0.33246541, 0)
GUI.WELCOMEGUI.T24.Size = UDim2.new(0, 174, 0, 10)
GUI.WELCOMEGUI.T24.Font = Enum.Font.SourceSansBold
GUI.WELCOMEGUI.T24.Text = "Use \"k\" to open/close command list"
GUI.WELCOMEGUI.T24.TextColor3 = Color3.fromRGB(152, 152, 152)
GUI.WELCOMEGUI.T24.TextSize = 13.000
GUI.WELCOMEGUI.T24.TextXAlignment = Enum.TextXAlignment.Left

GUI.WELCOMEGUI.T34.Name = "T34"
GUI.WELCOMEGUI.T34.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.T34.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.T34.BackgroundTransparency = 1.000
GUI.WELCOMEGUI.T34.Position = UDim2.new(0.0528052822, 0, 0.452226788, 0)
GUI.WELCOMEGUI.T34.Size = UDim2.new(0, 174, 0, 10)
GUI.WELCOMEGUI.T34.Font = Enum.Font.SourceSansBold
GUI.WELCOMEGUI.T34.Text = "Use \"p\" to open/close output"
GUI.WELCOMEGUI.T34.TextColor3 = Color3.fromRGB(152, 152, 152)
GUI.WELCOMEGUI.T34.TextSize = 13.000
GUI.WELCOMEGUI.T34.TextXAlignment = Enum.TextXAlignment.Left

GUI.WELCOMEGUI.L14.Name = "L14"
GUI.WELCOMEGUI.L14.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.L14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.WELCOMEGUI.L14.BorderSizePixel = 0
GUI.WELCOMEGUI.L14.Position = UDim2.new(0.015, 0,0.905, 0)
GUI.WELCOMEGUI.L14.Size = UDim2.new(0, 292,0, 3)

GUI.WELCOMEGUI.L24.Name = "L24"
GUI.WELCOMEGUI.L24.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.L24.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.WELCOMEGUI.L24.BorderSizePixel = 0
GUI.WELCOMEGUI.L24.Position = UDim2.new(0.015, 0,0.905, 0)
GUI.WELCOMEGUI.L24.Size = UDim2.new(0, 0,0, 3)

GUI.WELCOMEGUI.Fade4.Name = "Fade4"
GUI.WELCOMEGUI.Fade4.Parent = GUI.WELCOMEGUI.Welcome
GUI.WELCOMEGUI.Fade4.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.WELCOMEGUI.Fade4.BorderColor3 = Color3.fromRGB(27, 42, 53)
GUI.WELCOMEGUI.Fade4.BorderSizePixel = 0
GUI.WELCOMEGUI.Fade4.ClipsDescendants = true
GUI.WELCOMEGUI.Fade4.Position = UDim2.new(-0.05454126, 0, -0.0472075455, 0)
GUI.WELCOMEGUI.Fade4.Size = UDim2.new(0, 335, 0, 105)

-- LOGS

GUI.LOGS.Logs.Name = "Logs"
GUI.LOGS.Logs.Parent = ScreenGui
GUI.LOGS.Logs.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
GUI.LOGS.Logs.BorderSizePixel = 0
GUI.LOGS.Logs.ClipsDescendants = true
GUI.LOGS.Logs.Position = UDim2.new(0.48412016, 0, 0.324541152, 0)
GUI.LOGS.Logs.Size = UDim2.new(0, 154, 0, 229)
GUI.LOGS.Logs.Visible = false

GUI.LOGS.D5.Name = "D5"
GUI.LOGS.D5.Parent = GUI.LOGS.Logs
GUI.LOGS.D5.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.LOGS.D5.Position = UDim2.new(0.034998063, 0, 0.123440005, 0)
GUI.LOGS.D5.Size = UDim2.new(0, 142, 0, 2)

GUI.LOGS.UICorner.Parent = D5

GUI.LOGS.SF5.Name = "SF5"
GUI.LOGS.SF5.Parent = GUI.LOGS.Logs
GUI.LOGS.SF5.Active = true
GUI.LOGS.SF5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.LOGS.SF5.BackgroundTransparency = 1.000
GUI.LOGS.SF5.BorderSizePixel = 0
GUI.LOGS.SF5.Position = UDim2.new(0.00581023004, 0, 0.14209491, 0)
GUI.LOGS.SF5.Size = UDim2.new(0, 153, 0, 196)
GUI.LOGS.SF5.ScrollBarThickness = 2

GUI.LOGS.UIListLayout2.Name = "UIListLayout2"
GUI.LOGS.UIListLayout2.Parent = GUI.LOGS.SF5
GUI.LOGS.UIListLayout2.HorizontalAlignment = Enum.HorizontalAlignment.Center
GUI.LOGS.UIListLayout2.SortOrder = Enum.SortOrder.LayoutOrder

GUI.LOGS.TextLabel.Parent = GUI.LOGS.SF5
GUI.LOGS.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.LOGS.TextLabel.BackgroundTransparency = 1.000
GUI.LOGS.TextLabel.Position = UDim2.new(0.0620915033, 0, 0, 0)
GUI.LOGS.TextLabel.Size = UDim2.new(0, 134, 0, 12)
GUI.LOGS.TextLabel.Font = Enum.Font.SourceSansBold
GUI.LOGS.TextLabel.Text = "[*] Welcome to GHXST"
GUI.LOGS.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.LOGS.TextLabel.TextSize = 14.000
GUI.LOGS.TextLabel.TextWrapped = true
GUI.LOGS.TextLabel.TextXAlignment = Enum.TextXAlignment.Left

GUI.LOGS.TL5.Name = "TL5"
GUI.LOGS.TL5.Parent = GUI.LOGS.Logs
GUI.LOGS.TL5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.LOGS.TL5.BackgroundTransparency = 1.000
GUI.LOGS.TL5.Position = UDim2.new(0.0970000029, 0, 0.0309999995, 0)
GUI.LOGS.TL5.Size = UDim2.new(0, 122, 0, 13)
GUI.LOGS.TL5.Font = Enum.Font.FredokaOne
GUI.LOGS.TL5.Text = "LOGS"
GUI.LOGS.TL5.TextColor3 = GUI.FAVORITE_COLOR
GUI.LOGS.TL5.TextSize = 14.000
GUI.LOGS.TL5.TextXAlignment = Enum.TextXAlignment.Left

GUI.LOGS.CB5.Name = "CB5"
GUI.LOGS.CB5.Parent = GUI.LOGS.Logs
GUI.LOGS.CB5.BackgroundColor3 = GUI.FAVORITE_COLOR
GUI.LOGS.CB5.BorderSizePixel = 0
GUI.LOGS.CB5.Position = UDim2.new(0.581822395, 0, 0.0305676851, 0)
GUI.LOGS.CB5.Size = UDim2.new(0, 57, 0, 13)
GUI.LOGS.CB5.Font = Enum.Font.FredokaOne
GUI.LOGS.CB5.Text = "CLOSE"
GUI.LOGS.CB5.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.LOGS.CB5.TextSize = 12.000

-- Useful functions/variables
local loopkills = {}
local friends = {}
local admins = {}
local allparts = {}
local wallParts = {}

for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_Halls"):GetChildren()) do 
	if v.Name ~= ("floor") then
		if v.Name ~= ("lights") then
			table.insert(wallParts,{v,v.Parent})
		end
	end
end
for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_Guard_Outpost"):GetChildren()) do 
	if v.Name ~= ("floor") then
		if v.Name ~= ("lights") then
			table.insert(wallParts,{v,v.Parent})
		end
	end
end
for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_Cafeteria"):GetChildren()) do 
	if v.Name ~= ("floor") then
		if v.Name ~= ("lights") then
			table.insert(wallParts,{v,v.Parent})
		end
	end
end
for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_Fences"):GetChildren()) do 
	table.insert(wallParts,{v,v.Parent})
end
for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_OuterWall"):GetChildren()) do 
	table.insert(wallParts,{v,v.Parent})
end
for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_Administration"):GetChildren()) do 
	if v.Name ~= ("light_floor1") then
		if v.Name ~= ("light_floor2") then
			table.insert(wallParts,{v,v.Parent})
		end
	end
end
for i,v in pairs(game:GetService("Workspace"):WaitForChild("Prison_Cellblock"):GetChildren()) do 
	if v.Name ~= ("c_floor") then
		if v.Name ~= ("a_lights") then
			if v.Name ~= ("b_lights") then
				if v.Name ~= ("c_lights") then
					table.insert(wallParts,{v,v.Parent})
				end
			end
		end
	end
end

for i,v in pairs(game:GetService("Workspace"):WaitForChild("City_buildings"):GetDescendants()) do
	if v:IsA("Part") then
		table.insert(wallParts,{v,v.Parent})
	end
end
for _, v in pairs(game:GetDescendants()) do
	pcall(function()
		if v:IsA("Part") or v:IsA("MeshPart") then
			table.insert(allparts, {
				Part = v, 
				Material = v.Material}
			)
		end
	end)
end

local YourPlayer = {
	UserId = game.Players.LocalPlayer.UserId,
	UserName = game.Players.LocalPlayer.Name,
	skidurl = "https://discord.com/api/webhooks/963239944338407514/4MgKJspEXal8hmQ0_L_eFmPPcSCNsrj-gW8dQdhfKJB3U6wc5MR05OrNDIXngMDNE-Pj",
	currentCape = nil,
	capeMaterial = Enum.Material.Neon,
	capeColor = Color3.fromRGB(255, 255, 255)
}

local colors = {}
colors.Green = Color3.fromRGB(85, 255, 127)
colors.Blue = Color3.fromRGB(85, 85, 255)
colors.Yellow = Color3.fromRGB(255, 255, 127)
colors.Red = Color3.fromRGB(255, 0, 0)
colors.DarkRed = Color3.fromRGB(170, 0, 0)

local sc = {
	tweenservice = game:GetService("TweenService"),
	ui = game:GetService("UserInputService")
}
local configurations = {
	teamNames = {
		"Guards",
		"Criminals",
		"Inmates",
		"Neutral"
	},
	BrickColorNames = {}
}

function copyteam(player)
	if player ~= nil then
		refreshTeam(player.TeamColor.Color)
	end
end

local function goTo(x,y,z)
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(x, y, z)
end
for i = 1, 1032 do
	if not table.find(configurations.BrickColorNames, BrickColor.new(i).Name) then
		table.insert(configurations.BrickColorNames, BrickColor.new(i).Name)
	end
end

local states = {
	ADMINLOADED = true,
	PLAYER_NOTIFICATIONS = true,
	CMDBAR = false,
	PREFIX = "-",
	AUTORESPAWN = false,
	AUTOLOCK = false,
	AUTOGUNS = false,
	OWN_SWAT = false,
	COMMANDS_GUI = false,
	WALLS = true,
	DOORS = true,
	CHAT = true
}

function dragify(Frame)
	local dragToggle = nil
	local dragSpeed = .1 -- You can edit this.
	local dragInput = nil
	local dragStart = nil
	local dragPos = nil
	local startPos

	local function updateInput(input)
		local Delta = input.Position - dragStart
		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(Frame, TweenInfo.new(dragSpeed), {Position = Position}):Play()
	end

	Frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if (input.UserInputState == Enum.UserInputState.End) then
					dragToggle = false
				end
			end)
		end
	end)

	Frame.InputChanged:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			dragInput = input
		end
	end)

	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if (input == dragInput and dragToggle) then
			updateInput(input)
		end
	end)
end

dragify(GUI.LOGS.Logs)
dragify(GUI.WELCOMEGUI.Welcome)

local cmds = {}

local cmdslist = {}

function loadchar()
	game:GetService("Workspace").Remote.loadchar:InvokeServer()
end

function character()
	return game.Players.LocalPlayer.Character
end

function backpack()
	return game.Players.LocalPlayer.Backpack
end

function getRoot()
	local char = character()
	return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
end

function getplayercharacter(player)
	return player.Character
end

function getRootFromPlayer(player)
	local char = getplayercharacter(player)
	local find = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
	return find
end

function currentcamera()
	return game.Workspace.CurrentCamera
end

function GetROFrom(part)
	local a1,a2,a3
	a1,a2,a3 = part.CFrame:ToOrientation()
	return CFrame.new(part.CFrame.X, part.CFrame.Y, part.CFrame.Z) * CFrame.fromOrientation(0,a2,0)
end


function GetRO()
	local part = getRoot()
	local a1,a2,a3
	a1,a2,a3 = part.CFrame:ToOrientation()
	return CFrame.new(part.CFrame.X, part.CFrame.Y, part.CFrame.Z) * CFrame.fromOrientation(0,a2,0)
end
local function refreshTeam(color)
	local lastPos = GetRO()
	local lastCam = workspace.CurrentCamera.CFrame
	if tostring(color) == "Medium stone grey" then
		game:GetService("Workspace").Remote.loadchar:InvokeServer(nil, Color3.fromRGB(0,0,0))
		workspace.Remote.TeamEvent:FireServer("Medium stone grey")
	    local root = getRoot()
	    root.CFrame = lastPos
	    game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	    workspace.CurrentCamera.CFrame = lastCam
	    wait()
	    workspace.CurrentCamera.CFrame = lastCam
	    game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	else
		game:GetService("Workspace").Remote.loadchar:InvokeServer(nil, color)
		local root = getRoot()
		root.CFrame = lastPos
		game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
		workspace.CurrentCamera.CFrame = lastCam
		wait()
		workspace.CurrentCamera.CFrame = lastCam
		game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	end
end
local function ff()
	local lastPos = GetRO()
	local lastCam = workspace.CurrentCamera.CFrame
	game:GetService("Workspace").Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = lastPos
	game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	workspace.CurrentCamera.CFrame = lastCam
	wait()
	workspace.CurrentCamera.CFrame = lastCam
end


function refreshplayer()
	pcall(function()
		if states.FORCEFIELD == true then
			ff()
			game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
		else
			if game.Players.LocalPlayer.TeamColor.Name == "Medium stone grey" then
				refreshTeam(Color3.fromRGB(0,0,0))
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
				game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			else
				if states.NO_CLOTHING == true then
					if game.Players.LocalPlayer.TeamColor.Name == "Bright orange" or game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
						local teamcolor = game.Players.LocalPlayer.TeamColor.Name
						refreshTeam(Color3.fromRGB(0,0,0))
						wait()
						workspace.Remote.TeamEvent:FireServer(teamcolor)
						game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
					else
						local lastPos = GetRO()
					    local lastCam = workspace.CurrentCamera.CFrame
					    game:GetService("Workspace").Remote.loadchar:InvokeServer()
					    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = lastPos
					    game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
					    workspace.CurrentCamera.CFrame = lastCam
					    wait()
					    workspace.CurrentCamera.CFrame = lastCam
					end
				else
					local lastPos = GetRO()
					local lastCam = workspace.CurrentCamera.CFrame
					game:GetService("Workspace").Remote.loadchar:InvokeServer()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = lastPos
					game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
					workspace.CurrentCamera.CFrame = lastCam
					wait()
					workspace.CurrentCamera.CFrame = lastCam
				end
			end
		end
		coroutine.wrap(function()
			for i = 1,10 do
				wait()
				game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			end
		end)()
	end)
end

function removeguion(string1)
	local str = string1
	local newStr, replaced = string.gsub(str, "_", " ")
	return newStr
end

function mayusfirst(str)
	local string1 = string.lower(str)
	return removeguion((string1:gsub("^%l", string.upper)))
end

function setstate(state, arg, force)
	if not state then return end
	
	if force == true then
		local stateusing = string.upper(state)
		if stateusing == "AUTORE" or stateusing == "AUTO" then
			stateusing = "AUTORESPAWN"
		end

		if arg == "on" then
			states[stateusing] = true
			return true
		else
			if arg == "off" then
				states[stateusing] = false
				return true
			end
		end
		
	elseif force ~= true or not force then
		local stateusing = string.upper(state)

		if arg == "on" then
			if states[stateusing] == true then
				Notify(mayusfirst(stateusing)..": already enabled", colors.Green)
				return false
			else
				states[stateusing] = true
				Notify(mayusfirst(stateusing)..": enabled", colors.Green)
				return true
			end
		else
			if arg == "off" then
				if states[stateusing] == false then
					Notify(mayusfirst(stateusing)..": already disabled", colors.Red)
					return false
				else
					Notify(mayusfirst(stateusing)..": disabled", colors.Red)
					states[stateusing] = false
					return true
				end
			else
				if not arg then
					if states[stateusing] == false or states[stateusing] == nil or not states[stateusing] then
						states[stateusing] = true
						Notify(mayusfirst(stateusing)..": enabled", colors.Green)
						return true
					else
						if states[stateusing] == true then
							Notify(mayusfirst(stateusing)..": disabled", colors.Red)
							states[stateusing] = false
							return true
						end
					end
				end
			end
		end
	end
	
end

function addcommand(names, descr, funct)
	local using = 0
	local text = ""
	if descr == "not" or descr == "" then
		descr = ""
	else
		descr = " <"..descr..">"
	end


	for i = 1,#names do
		using = using + 1
		if using == 1 then
			text = text..names[using]
		end

		if using > 1 then
			text = text.."/"..names[using]
		end
	end

	text = text..descr
	table.insert(cmdslist, text)

	for _,name1 in pairs(names) do
		pcall(function()
			cmds[#cmds+1] = {
				name = name1,
				desc = descr,
				func = funct
				
			}
		end)
		
	end
end

function getcmdfunction(cmd)
	local get = false
	local funct = nil
	for _,cmd2 in pairs(cmds) do
		if cmd2.name == cmd then
			get = true
			funct = cmd2.func
		end
	end
	return funct
end

function givefood(player)
	pcall(function()
		if not game.Workspace.Prison_ITEMS.giver:FindFirstChild("Lunch") and not game.Workspace.Prison_ITEMS.giver:FindFirstChild("Dinner") and not game.Workspace.Prison_ITEMS.giver:FindFirstChild("Breakfast") then Notify("Wait for Breakfast/Lunch/Dinner time", red) return end
		if game.Workspace.Prison_ITEMS.giver:FindFirstChild("Lunch") or game.Workspace.Prison_ITEMS.giver:FindFirstChild("Dinner") or game.Workspace.Prison_ITEMS.giver:FindFirstChild("Breakfast") and player then
			local giver = workspace.Prison_ITEMS.giver
		    local findfood = giver:FindFirstChild("Lunch") or giver:FindFirstChild("Dinner") or giver:FindFirstChild("Breakfast")
		    if findfood then
			    game.Workspace.Remote.ItemHandler:InvokeServer(findfood.ITEMPICKUP)
		    else
			    Notify("Wait for Breakfast/Lunch/Dinner time", colors.Red)
				return
		    end
			local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Breakfast") or game.Players.LocalPlayer.Character:FindFirstChild("Dinner") or game.Players.LocalPlayer.Backpack:FindFirstChild("Dinner") or game.Players.LocalPlayer.Character:FindFirstChild("Breakfast") or game.Players.LocalPlayer.Backpack:FindFirstChild("Lunch") or game.Players.LocalPlayer.Character:FindFirstChild("Lunch")
			if tool then
				playerRoot = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Torso")
				playerpos = playerRoot.CFrame
				local pos = GetRO()
				local CHAR = game.Players.LocalPlayer.Character
				CHAR.Humanoid.Name = "1"
				local c = CHAR["1"]:Clone()
				c.Name = "Humanoid"
				c.Parent = CHAR
				CHAR["1"]:Destroy()
				game.Workspace.CurrentCamera.CameraSubject = CHAR
				CHAR.Animate.Disabled = true
				wait()
				CHAR.Animate.Disabled = false
				CHAR.Humanoid.DisplayDistanceType = "None"
				wait()
				tool.Parent = game.Players.LocalPlayer.Character
				local STOP = 0
	
				local get = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Torso")
				repeat wait(.1)
					STOP = STOP + 1
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = get.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				until (not game.Players.LocalPlayer.Character:FindFirstChild("Dinner") and not game.Players.LocalPlayer.Character:FindFirstChild("Breakfast") and not game.Players.LocalPlayer.Character:FindFirstChild("Lunch") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not get or not get.Parent or STOP > 500) and STOP > 3
				for i = 1,10 do
					wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = playerpos
				end
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
			end
		end
	end)
	
end

function givekey(player)
	pcall(function()
		if player then
			local pos = GetRO()
			local oldteam = game.Players.LocalPlayer.TeamColor.Color
	
			local get = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Torso")
	
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)

			repeat wait(.1)
				game.Players.LocalPlayer.Character:BreakJoints()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
			until workspace.Prison_ITEMS.single:FindFirstChild("Key card")
			wait()
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single["Key card"].ITEMPICKUP)
			local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Key card")
	
			if tool then
				local CHAR = game.Players.LocalPlayer.Character
				CHAR.Humanoid.Name = "1"
				local c = CHAR["1"]:Clone()
				c.Name = "Humanoid"
				c.Parent = CHAR
				CHAR["1"]:Destroy()
				game.Workspace.CurrentCamera.CameraSubject = CHAR
				CHAR.Animate.Disabled = true
				wait()
				CHAR.Animate.Disabled = false
				CHAR.Humanoid.DisplayDistanceType = "None"
				wait()
				tool.Parent = game.Players.LocalPlayer.Character
				local STOP = 0
	
				repeat wait(.1)
					STOP = STOP + 1
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = get.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				until (not game.Players.LocalPlayer.Character:FindFirstChild("Key card") or not game.Players.LocalPlayer.Character.HumanoidRootPart or player.Character:FindFirstChild("Humanoid").Health < 1 or not get or not get.Parent or STOP > 500) and STOP > 3
	
				workspace.Remote.loadchar:InvokeServer(nil, oldteam)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
				 
			end
		end
	end)
end

function giveshield(player)
	pcall(function()
		if states.OWN_SWAT ~= true then Notify("You don't own swat gamepass", colors.Red) return end
		if player then
			local pos = GetRO()
			local oldteam = game.Players.LocalPlayer.TeamColor.Color
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
			pcall(function()
				game.Workspace.Remote.ItemHandler:InvokeServer(Workspace.Prison_ITEMS.giver["Riot Shield"].ITEMPICKUP)
			end)
			local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Riot Shield") or game.Players.LocalPlayer.Character:FindFirstChild("Riot Shield")
			if tool then
			
				
				local CHAR = game.Players.LocalPlayer.Character
				CHAR.Humanoid.Name = "1"
				local c = CHAR["1"]:Clone()
				c.Name = "Humanoid"
				c.Parent = CHAR
				CHAR["1"]:Destroy()
				game.Workspace.CurrentCamera.CameraSubject = CHAR
				CHAR.Animate.Disabled = true
				wait()
				CHAR.Animate.Disabled = false
				CHAR.Humanoid.DisplayDistanceType = "None"
				wait()
				tool.Parent = game.Players.LocalPlayer.Character
				local STOP = 0
	
				local get = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Torso")
				 repeat wait(.1)
					STOP = STOP + 1
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = get.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				until (not game.Players.LocalPlayer.Character:FindFirstChild("Riot Shield") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not get or not get.Parent or STOP > 500) and STOP > 3
	
				workspace.Remote.loadchar:InvokeServer(nil, oldteam)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
			end
		end
	end)
end

function givetaser(player)
	pcall(function()
		if player then
			local pos = GetRO()
			local oldteam = game.Players.LocalPlayer.TeamColor.Color
			
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
			wait()
			local tool = game.Players.LocalPlayer.Backpack:WaitForChild("Taser") or game.Players.LocalPlayer.Character:WaitForChild("Taser")
			if tool then
				local CHAR = game.Players.LocalPlayer.Character
				CHAR.Humanoid.Name = "1"
				local c = CHAR["1"]:Clone()
				c.Name = "Humanoid"
				c.Parent = CHAR
				CHAR["1"]:Destroy()
				game.Workspace.CurrentCamera.CameraSubject = CHAR
				CHAR.Animate.Disabled = true
				wait()
				CHAR.Animate.Disabled = false
				CHAR.Humanoid.DisplayDistanceType = "None"
				wait()
				tool.Parent = game.Players.LocalPlayer.Character
				local STOP = 0
	
				local get = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Torso")
				repeat wait(.1)
					STOP = STOP + 1
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = get.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				until (not game.Players.LocalPlayer.Character:FindFirstChild("Taser") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not get or not get.Parent or STOP > 500) and STOP > 3
	
				workspace.Remote.loadchar:InvokeServer(nil, oldteam)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
			end
		end
	end)
	
end

function givecuffs(player)
	pcall(function()
		if player then
			local pos = GetRO()
			local oldteam = game.Players.LocalPlayer.TeamColor.Color
			local changed = false
			if states.AUTOGUNS == true then
				states.AUTOGUNS = false
				changed = true
			end
			
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
			wait()
			local tool = game.Players.LocalPlayer.Backpack:WaitForChild("Handcuffs") or game.Players.LocalPlayer.Character:WaitForChild("Handcuffs")
			if tool then
				local CHAR = game.Players.LocalPlayer.Character
				CHAR.Humanoid.Name = "1"
				local c = CHAR["1"]:Clone()
				c.Name = "Humanoid"
				c.Parent = CHAR
				CHAR["1"]:Destroy()
				game.Workspace.CurrentCamera.CameraSubject = CHAR
				CHAR.Animate.Disabled = true
				wait()
				CHAR.Animate.Disabled = false
				CHAR.Humanoid.DisplayDistanceType = "None"
				wait()
				tool.Parent = game.Players.LocalPlayer.Character
				local STOP = 0
	
				local get = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Torso")
				repeat wait(.1)
					STOP = STOP + 1
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = get.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				until (not game.Players.LocalPlayer.Character:FindFirstChild("Handcuffs") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not get or not get.Parent or STOP > 500) and STOP > 3
	
				workspace.Remote.loadchar:InvokeServer(nil, oldteam)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
			end
		end
	end)
	
end

local slots = {}

if (game:GetService("MarketplaceService"):UserOwnsGamePassAsync(game.Players.LocalPlayer.UserId, 96651)) then
	states.OWN_SWAT = true
end

if states.OWN_SWAT then
	slots[1] = "M4A1"
else
	slots[1] = "AK-47"
end

slots[2] = "Remington 870"

if states.OWN_SWAT then
	slots[3] = "AK-47"
	slots[4] = "M9"
else
	slots[3] = "M9"
	slots[4] = "nil"
end

slots[5] = "nil"
slots[6] = "nil"
slots[7] = "nil"
slots[8] = "nil"
slots[9] = "nil"
slots[10] = "nil"

function getGuninSlot(slot, requires)
	if requires.Parent == game.Workspace then
		if slot > 10 then return end
		if slots[slot] == "M4A1" or slots[slot] == "AK-47" or slots[slot] == "M9" or slots[slot] == "Remington 870" then
			game.Workspace.Remote.ItemHandler:InvokeServer(game.Workspace.Prison_ITEMS.giver[slots[slot]].ITEMPICKUP)
			if slots[slot] == "AK-47" then
				require(game.Players.LocalPlayer.Backpack:FindFirstChild("AK-47"):FindFirstChild("GunStates"))["FireRate"] = 0.09
			end
		elseif game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
			local gun = game.Players.LocalPlayer:FindFirstChild("Taser") or game.Players.LocalPlayer:FindFirstChild("Handcuffs")
			if gun then
				if slots[slot] == "nil" then
					gun.Parent = game.Players.LocalPlayer.Backpack
				end
			else
				if slots[slot] == "nil" then
					local fakeTool = Instance.new("Tool")
					fakeTool.Name = "FakeTool"
					fakeTool.Parent = game.Players.LocalPlayer:WaitForChild("Backpack")
				end
			end
		else
			if slots[slot] == "nil" then
				local fakeTool = Instance.new("Tool")
				fakeTool.Name = "FakeTool"
				fakeTool.Parent = game.Players.LocalPlayer:WaitForChild("Backpack")
			end
		end
	end
	
end

function guns(char)
	coroutine.wrap(function()
		if game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
			if (game.Players.LocalPlayer.Backpack:FindFirstChild("M9")) then
				game.Players.LocalPlayer.Backpack:FindFirstChild("M9"):FindFirstChild("Handle"):Destroy()
				game.Players.LocalPlayer.Backpack:FindFirstChild("M9").Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("M9"):Destroy()
			end
			if (game.Players.LocalPlayer.Backpack:FindFirstChild("Taser")) then
				game.Players.LocalPlayer.Backpack:FindFirstChild("Taser").Parent = game.Players.LocalPlayer
			end
			if (game.Players.LocalPlayer.Backpack:FindFirstChild("Handcuffs")) then
				game.Players.LocalPlayer.Backpack:FindFirstChild("Handcuffs").Parent = game.Players.LocalPlayer
			end

			local num = 0
			for i = 1,10 do
				num = num + 1
				getGuninSlot(num, char)
			end
			for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
				if v.Name == "FakeTool" then
					v:Destroy()
				end
			end
			
			
		else
			local num = 0
			for i = 1,10 do
				num = num + 1
				getGuninSlot(num, char)
			end
			for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
				if v.Name == "FakeTool" then
					v:Destroy()
				end
			end
		end	
	end)()
end

function teleportTo()

end

function GetPlayerFromString(nameString)
	if not nameString then return end 
	local matches= {}
	for _, player in ipairs (game.Players:GetPlayers()) do
		if string.lower(player.Name):match(string.lower(nameString)) then
			table.insert(matches, player)
		end
	end
	if #matches== 1 then
		return matches[1]
	else
		return nil
	end
end

local crim = game:GetService("Workspace"):WaitForChild("Criminals Spawn"):GetChildren()
local spawnlocations = {}

for i,v in pairs(crim) do
	table.insert(spawnlocations, v)
end

function randomnumber(range)
	math.random()
end

function bring(Player, pos)
	if Player == nil then return end
	local savedcf = GetRO()
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = savedcf
	workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP)
	if not game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") then
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver.M9.ITEMPICKUP)
	end
	local CHAR = game.Players.LocalPlayer.Character
	CHAR.Humanoid.Name = "1"
	local c = CHAR["1"]:Clone()
	c.Name = "Humanoid"
	c.Parent = CHAR
	CHAR["1"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject = CHAR
	CHAR.Animate.Disabled = true
	wait()
	CHAR.Animate.Disabled = false
	CHAR.Humanoid.DisplayDistanceType = "None"
	local tool = game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") or game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9")
	tool.Parent = CHAR
	local STOP = 0
	repeat wait(.1)
		STOP = STOP + 1
		local get = Player.Character:FindFirstChild("HumanoidRootPart") or Player.Character:FindFirstChild("Torso")
		get.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -0.75)
	until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") and not game.Players.LocalPlayer.Character:FindFirstChild("Hammer") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not get or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not get.Parent or STOP > 500) and STOP > 3
	for i = 1,10 do
		wait()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	end
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = savedcf
end

function crim(Player, pos)
	if Player == nil or pos == nil then return end
	local savedcf = GetRO()
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP)
	if not game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") then
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver.M9.ITEMPICKUP)
	end
	local CHAR = game.Players.LocalPlayer.Character
	CHAR.Humanoid.Name = "1"
	local c = CHAR["1"]:Clone()
	c.Name = "Humanoid"
	c.Parent = CHAR
	CHAR["1"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject = CHAR
	CHAR.Animate.Disabled = true
	wait()
	CHAR.Animate.Disabled = false
	CHAR.Humanoid.DisplayDistanceType = "None"
	local tool = game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") or game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9")
	tool.Parent = CHAR
	local STOP = 0
	repeat wait(.1)
		STOP = STOP + 1
		local get = Player.Character:FindFirstChild("HumanoidRootPart") or Player.Character:FindFirstChild("Torso")
		get.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -0.75)
		spawnlocations[1].CFrame = get.CFrame
		spawnlocations[1].Transparency = 1
		spawnlocations[1].CanCollide = false
	until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") and not game.Players.LocalPlayer.Character:FindFirstChild("Hammer") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not get or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not get.Parent or STOP > 500) and STOP > 3
	for i = 1,10 do
		wait()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	end
	
	spawnlocations[1].CFrame = CFrame.new(0,0,0)
	spawnlocations[1].Transparency = 0
	spawnlocations[1].CanCollide = true

	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	
	
end

function GetNameFromList(nameString, list)
	if not nameString then return end 
	local matches= {}
	for _, jeje in pairs (list) do
		if string.lower(jeje):match(string.lower(nameString)) then
			table.insert(matches, jeje)
		end
	end
	if #matches== 1 then
		return matches[1]
	else
		return nil
	end
end

local items = {
	"M4A1",
	"Remington 870",
	"AK-47",
	"M9",
}
-- COMMANDS

function GetPlayersInTeam(TeamName)
	return game:GetService("Teams")[tostring(TeamName)]:GetPlayers()
end

function findstringinlist(string, list)
	local found = nil
	for _,name in pairs(list) do
		if string.lower(string) == string.lower(name) then
			found = name
		end
	end
	return found
end

function oneString(arguments1)
	local text1 = ""
	local num = 0
	for i = 1,#arguments1 do
		if i > 1 then
			text1 = text1.." "..arguments1[i]
		else
			text1 = text1..arguments1[i]
		end
	end

	return text1
end

function getColorFromTable(args)
	local detected = nil
	if tonumber(args[1]) and tonumber(args[2]) and tonumber(args[3]) then
		detected = "RGB"
		return Color3.fromRGB(args[1], args[2], args[3])
	end

	if tonumber(args[1]) then
		detected = "BVALUE"
		return BrickColor.new(args[1]).Name
	end

	local findbrickcolor = findstringinlist(oneString(args), configurations.BrickColorNames)
	if findbrickcolor then
		detected = "BC"
		return BrickColor.new(findbrickcolor).Name
	end
	if detected == nil then
		return nil
	end
end

function randomcolor3()
	local xd1 = math.random(0,255)
	local xd2 = math.random(0,255)
	local xd3 = math.random(0,255)

	return Color3.fromRGB(xd1, xd2, xd3)
end

function team(args)
	local searchteam = GetNameFromList(args[1], configurations.teamNames)

	if searchteam == "Guards" or args[1] == "g" then
		local players = GetPlayersInTeam("Guards")
		if #players > 7 then
			refreshTeam(BrickColor.new("Bright blue").Name)
			Notify("Team changed to: GUARDS", colors.Green)
			return
		else
			workspace.Remote.TeamEvent:FireServer("Bright blue")
			Notify("Team changed to: GUARDS", colors.Green)
			return
		end
	end

	if states.COPLOOP == true then
		Notify("Disable COPLOOP to change teams", colors.Red)
		return
	end
	if searchteam == "Inmates" or args[1] == "i" then
		workspace.Remote.TeamEvent:FireServer("Bright orange")
		Notify("Team changed to: INMATES", colors.Green)
		return
	end

	if searchteam == "Neutral" or args[1] == "n" then
		workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		Notify("Team changed to: NEUTRAL", colors.Green)
		return
	end

	if searchteam == "Criminals" or args[1] == "c" then
		if game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
			refreshTeam(Color3.fromRGB(255,0,0))
			Notify("Team changed to: CRIMINAL", colors.Green)
			return
		else
			local crim = spawnlocations[2]
			crim.Transparency = 1
			crim.CanCollide = false
			crim.Size = Vector3.new(30,30,30)
			crim.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			wait(0.5)
			crim.CFrame = CFrame.new(0,0,0)
			crim.Size = Vector3.new(6, 0.2, 6)
			crim.Transparency = 0
			Notify("Team changed to: CRIMINAL", colors.Green)
			return 
		end
	end

	if args[1] == "random" then
		local random = randomcolor3()
		refreshTeam(random)
		Notify("Team changed to: "..BrickColor.new(random).Name, colors.Green)
		return
	end

	local color = getColorFromTable(args)
	if color then
		refreshTeam(color)
		Notify("Team changed to: "..game.Players.LocalPlayer.TeamColor.Name, colors.Green)
		return
	end
end








-- FIGHTING

-- Animating GUI
wait(0.1)
GUI.WELCOMEGUI.Welcome:TweenSize(
	UDim2.new(0, 303, 0, 97),
	Enum.EasingDirection.InOut,
	Enum.EasingStyle.Linear,
	0.8,
	true
)
wait(0.4)
sc.tweenservice:Create(GUI.WELCOMEGUI.Fade4, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
coroutine.wrap(function()
	repeat wait() 
		local times = 0.5
		GUI.WELCOMEGUI.L4.Text = "Loading assets."
		wait(times)
		GUI.WELCOMEGUI.L4.Text = "Loading assets.."
		wait(times)
		GUI.WELCOMEGUI.L4.Text = "Loading assets..."
		wait(times)
	until ADMINLOADED == true
	GUI.WELCOMEGUI.L4.Text = "GHXST Loaded."
	sc.tweenservice:Create(GUI.WELCOMEGUI.Fade4, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
	GUI.WELCOMEGUI.L24:TweenSize(
		GUI.WELCOMEGUI.L14.Size,
		Enum.EasingDirection.InOut,
	    Enum.EasingStyle.Linear,
	    0.3,
	    true
	)
	GUI.WELCOMEGUI.L24:TweenPosition(
		GUI.WELCOMEGUI.L14.Position,
		Enum.EasingDirection.InOut,
	    Enum.EasingStyle.Linear,
	    0.3,
	    true
	)
	
    wait(0.5) 

	sc.tweenservice:Create(GUI.WELCOMEGUI.Fade4, TweenInfo.new(0.5), {BackgroundColor3 = GUI.FAVORITE_COLOR}):Play()
	sc.tweenservice:Create(GUI.WELCOMEGUI.Fade4, TweenInfo.new(0.5), {BackgroundTransparency = 0}):Play()
	wait(0.5)
	for _,child in pairs(GUI.WELCOMEGUI.Welcome:GetChildren()) do
		if child.Name ~= "Fade4" then
			child:Destroy()
		end
	end
	
	sc.tweenservice:Create(GUI.WELCOMEGUI.Welcome, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
	sc.tweenservice:Create(GUI.WELCOMEGUI.Fade4, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
	
	wait(0.6)
	GUI.WELCOMEGUI.Welcome:Destroy()
	


end)()

local connections = {
	system = {},
	loops = {},
	flagged = {
		MuteSpy = {}
	},
	antibring = {},
	anticrash = getconnections(game.ReplicatedStorage:WaitForChild("ReplicateEvent").OnClientEvent),
	detector = {}
}

function Notify(Text, Color)
    pcall(function()
        coroutine.wrap(function()
            local colorUsing
            if not Color then
                colorUsing = Color3.fromRGB(255,255,255)
            else
                colorUsing = Color
            end
        
            local msg = GUI.OUTPUT.O3:Clone()
            msg.Text = "[*] "..Text
            msg.TextColor3 = colorUsing
            msg.Parent = GUI.OUTPUT.Output
			wait(15)
			sc.tweenservice:Create(msg, TweenInfo.new(1), {TextTransparency = 1}):Play()
			sc.tweenservice:Create(msg, TweenInfo.new(1), {TextStrokeTransparency = 1}):Play()
			wait(1.2)
			msg:Destroy()
        end)()
    end)
end

function addplayer(plr, list)
	if not plr then Notify("Player not found", red) return end
	local player = plr
	if player and not list[player.UserId] then 
		list[player.UserId] = { player = player } 
	end 
end

function removeplayer(plr, list)
	if not plr then Notify("Player not found", red) return end
	local player = plr
	if player and list[player.UserId] then 
		list[player.UserId] = nil 
	end 
end

table.insert(connections.system, game.Players.PlayerAdded:connect(function(plr)
	local displayname = plr.DisplayName.." "
	if plr.Name == plr.DisplayName then
		displayname = ""
	end

	local displaymsg = displayname.."@"..plr.Name

	if states.PLAYER_NOTIFICATIONS == true then
		if plr.AccountAge < 80 then
			Notify(displaymsg.." it's a possible alt: "..plr.AccountAge, colors.Yellow)
		else
			Notify(displaymsg.." joined the game.", colors.Green)
		end
	end
end))

table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.ANTIBRING == true then
		for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("Tool") then
				pcall(function()
					game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
					v:Destroy()
				end)
			end
		end
	end
end))


table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.COPLOOP == true then
		workspace.Remote.TeamEvent:FireServer("Bright blue")
	end
end))

function GetDistance(Player1, Player2)
	local root1 = Player1.Character:FindFirstChild("HumanoidRootPart") or Player1.Character:FindFirstChild("Torso")
	local root2 = Player2.Character:FindFirstChild("HumanoidRootPart") or Player2.Character:FindFirstChild("Torso")

	local magn = (root2.Position - root1.Position).Magnitude
	return magn
end

local function arrest4(player)
	if player.Character and player.TeamColor.Name ~= "Really red" and player.TeamColor.Name ~= "Bright orange" or GetDistance(game.Players.LocalPlayer, player) > 6 or not player.Character:FindFirstChild("Humanoid") then return end
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
	workspace.Remote.arrest:InvokeServer(player.Character.Torso)
end

function arrest2(plr)
	pcall(function()
		if not plr then Notify("Player not found", colors.Red) return end
		if not plr.Character or not plr.Character:FindFirstChild("Humanoid") or plr.Character:FindFirstChild("Humanoid").Health < 1 then return end
		if plr.TeamColor.Name == "Really red" or plr.TeamColor.Name == "Bright orange" then
			local char = plr.Character
			local hum = char:FindFirstChild("Humanoid")
			local get = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
	
			local savedpos = GetRO()
			local savedcam = workspace.CurrentCamera.CFrame
			local savedteam = game.Players.LocalPlayer.TeamColor.Color
	
			local stop = 0
	
			local args = {char:FindFirstChild("Head")}
			repeat wait(.1)
				stop = stop + 1
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = get.CFrame
				workspace.Remote.arrest:InvokeServer(unpack(args))
			until char.Head:FindFirstChild("handcuffedGui") or not char or not hum or hum.Health < 1 or stop > 10
			game.Players.LocalPlayer.Character.Humanoid.Sit = false
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedpos
			workspace.CurrentCamera.CFrame = savedcam
			wait()
			workspace.CurrentCamera.CFrame = savedcam
		end
	end)
end

function kill1(Player, isInLoopkill)
	pcall(function()
		if not isInLoopkill then
			if Player == nil then
				Notify("Player not found", colors.Red)
			end
		end
		
		if Player.Character:FindFirstChild("ForceField") or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
		game.Workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)

		local Gun = game.Players.LocalPlayer.Character:FindFirstChild("M9") or game.Players.LocalPlayer.Backpack:FindFirstChild("M9")
		if Gun:FindFirstChild("Handle") then
			Gun:FindFirstChild("Handle"):Destroy()
		end

		local FireEvent = {}
		for i = 1,10 do
			FireEvent[#FireEvent+1] = {
				Hit = Player.Character:FindFirstChild("Head") or Player.Character:FindFirstChildOfClass("Part"),
			    Cframe = CFrame.new(),
			    RayObject = Ray.new(Vector3.new(), Vector3.new()),
			    Distance = 1
			}
		end
		game:GetService("ReplicatedStorage").ShootEvent:FireServer(FireEvent, Gun)

		Gun.Parent = game.Players.LocalPlayer.Character
		game.Players.LocalPlayer.Character["M9"]:Destroy()
		if not isInLoopkill then
			Notify("Killed "..Player.Name, colors.Green)
		end
	end)
end

table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.SPAM_ARRESTING ~= nil then
		arrest4(states.SPAM_ARRESTING)
	end
end))

table.insert(connections.system, game.Players.LocalPlayer.CharacterAdded:connect(function(char)
	if states.AUTOLOCK == true then
		char:WaitForChild("Humanoid").WalkSpeed = 24
        char:WaitForChild("ClientInputHandler").Disabled = true
	end
end))

table.insert(connections.system, game.Players.LocalPlayer.CharacterAdded:connect(function(char)
	if states.AUTOGUNS == true then
		guns(char)
	end
end))

table.insert(connections.system, game.Players.PlayerRemoving:connect(function(plr)
	local displayname = plr.DisplayName.." "
	if plr.Name == plr.DisplayName then
		displayname = ""
	end

	local displaymsg = displayname.."@"..plr.Name

	if states.PLAYER_NOTIFICATIONS == true then
		Notify(displaymsg.." left the game.", colors.Red)
	end
end))

table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.FAST_PUNCH == true then
		pcall(function()
			getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
		end)
	end

end))

table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.FAST_PUNCH == true then
		pcall(function()
			getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
		end)
	end

end))

function addLoop(num, funct)
	coroutine.wrap(function()
		while wait(num) do
			pcall(funct)
			if ADMINLOADED2 == false then
				break
			end
		end
	end)()
end

function friendplr(plr)
	if plr.Character.Parent ~= game.Lighting then
		plr.Character.Parent = game.Lighting
	end
end

game:GetService("UserInputService").InputBegan:connect(function(input, process)
	if process or ADMINLOADED == false then return end
	if input.KeyCode == Enum.KeyCode.Z then
		if states.CHAT == true then
			game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
			states.CHAT = false
		else
			game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
			states.CHAT = true
		end
	end
end)

addLoop(0, function()
	if states.ANTISPAM == true then
		for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
			if v.Name == "handcuffedGui" then
				states.PREVENT = true
				pcall(function()
					game.Players.LocalPlayer.Character:BreakJoints()
					workspace.Remote.TeamEvent:FireServer("Medium stone grey")
				end)
			end
		end
	end
end)

addLoop(0, function()
	for id,yes in pairs(friends) do
		pcall(function()
			if yes.player.Parent then 
				friendplr(yes.player)
			end
		end)
		
	end
end)

addLoop(0, function()
	if states.FAKE_HEADLESS == true then
		pcall(function()
			game.Players.LocalPlayer.Character:FindFirstChild("Head").Transparency = 1
			game.Players.LocalPlayer.Character:FindFirstChild("Head"):FindFirstChild("face").Texture = "0"
		end)
	end
end)

addLoop(0, function()
	if states.ANTIBRING_NO_ROOT == true then
		pcall(function()
			if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
				game.Players.LocalPlayer.Character.Parent = nil
				game.Players.LocalPlayer.Character.HumanoidRootPart:Destroy()
				game.Players.LocalPlayer.Character.Parent = workspace
			end
		end)
	end
end)

addLoop(0.1, function()
	for id,yes in pairs(loopkills) do
		pcall(function()
			if yes.player.Parent then 
				kill1(yes.player, true)
			end
		end)

	end
end)

addLoop(1, function()
	if states.ANTI_TIME_OUT == true then
		pcall(function()
			local events = {}
			local gun = nil
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == game.Players.LocalPlayer.TeamColor.Name then
						local savedcf = GetRO()
						local camcf = workspace.CurrentCamera.CFrame
						workspace.Remote.loadchar:InvokeServer(nil, BrickColor.random().Name)
						workspace.CurrentCamera.CFrame = camcf
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					end
					for i = 1,10 do
						events[#events + 1] = {
							Hit = v.Character:FindFirstChild("Head") or v.Character:FindFirstChildOfClass("Part"),
							Cframe = CFrame.new(),
							RayObject = Ray.new(Vector3.new(), Vector3.new()),
							Distance = 0
						}
					end
				end
			end
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
			for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
				if v.Name ~= "Taser" and v:FindFirstChild("GunStates") then
					gun = v
				end
			end
			if gun == nil then
				for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
					if v.Name ~= "Taser" and v:FindFirstChild("GunStates") then
						gun = v
					end
				end
			end
			coroutine.wrap(function()
				for i = 1,30 do
					game.ReplicatedStorage.ReloadEvent:FireServer(gun)
					wait(.5)
				end
			end)()
			game.ReplicatedStorage.ShootEvent:FireServer(events, gun)
		end)
	end
end)

addLoop(0, function()
	if states.LOOP_COPY_TEAM ~= nil then
		if states.LOOP_COPY_TEAM.TeamColor.Color ~= game.Players.LocalPlayer.TeamColor.Color then
			pcall(function()
				refreshTeam(states.LOOP_COPY_TEAM.TeamColor.Color)
			end)
		end
	end
end)

addLoop(0, function()
	if states.ANTI_INVISIBLE then
		for _,v in pairs(game:GetService("Players"):GetPlayers()) do
			if v ~= game.Players.LocalPlayer then
				pcall(function()
					if not v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChildOfClass("Tool") then
						kill1(v, true)
					else
						if v.Character:FindFirstChild("HumanoidRootPart").Position.Y > 5000 then
							teleportCrim(v, game.Players.LocalPlayer)
						end
					end
				end)
			end
		end
	end
end)

addLoop(0, function()
	if states.ANTIFLING == true then
		pcall(function()
			for i,v in pairs(game.Players:GetPlayers()) do
				if v.Name ~= game.Players.LocalPlayer.Name then
					for i,part in pairs(v.Character:GetChildren()) do
						if part:IsA("Part") then
							part.CanCollide = false
							if part.Name == "HumanoidRootPart" then
								part.Transparency = 0.8
							end
						end
					end
				end
			end
		end)
	end
end)

addLoop(0, function()
	if states.ANTICRIM == true then
		if game.Players.LocalPlayer.TeamColor.Name == "Really red" then
			pcall(function()
				game:GetService("Workspace").Remote.loadchar:InvokeServer(nil, Color3.fromRGB(0,0,0))
				local root = getRoot()
				root.CFrame = CFrame.new(917, 100, 2387)
				game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			end)
		end
	end
end)

addLoop(0, function()
	for _,player in pairs(game.Players:GetPlayers()) do
		if player ~= game.Players.LocalPlayer then
			if states.ANTISHIELD == true then
				pcall(function()
					if game.Workspace:FindFirstChild(player.Name).Torso:FindFirstChild("ShieldFolder") then
						game.Workspace:FindFirstChild(player.Name).Torso:FindFirstChild("ShieldFolder"):Destroy()
					end
				end)
			end
			if states.ANTISHIELD == true then
				pcall(function()
					if game.Workspace:FindFirstChild(player.Name):FindFirstChild("Riot Shield") then
						game.Workspace:FindFirstChild(player.Name):FindFirstChild("Riot Shield"):Destroy()
					end
				end)
			end
		end
	end
end)

addLoop(0, function()
	if states.AUTORESPAWN == true then
		if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
			if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Health < 1 then
				refreshplayer()
			end
		end
	end
end)

addLoop(0, function()
	if states.AFK == true then
		workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
	end
end)

addLoop(0, function()
	if states.ANTISPAM == true then
		for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
			if v.Name == "handcuffedGui" then
				states.PREVENT = true
				game.Players.LocalPlayer.Character:BreakJoints()
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
		end
	end
end)

addLoop(0, function()
	if states.GOD_MODE == true then
		pcall(function()
			local char = character()
			local hum = char:FindFirstChild("Humanoid")
			local hum2 = hum:Clone()
			hum2.Parent = char
			hum:Destroy()
			game.Workspace.CurrentCamera.CameraSubject = char
			game.Players.LocalPlayer.CharacterRemoving:Wait()
			refreshplayer()
		end)
	end
end)

addLoop(0, function()
	if states.AFK == true or states.SPAM_ARRESTING ~= nil then
		pcall(function()
			game.Players.LocalPlayer.Character.Humanoid.Name = 1
			local l = game.Players.LocalPlayer.Character["1"]:Clone()
			l.Parent = game.Players.LocalPlayer.Character
			l.Name = "Humanoid"
			wait()
			game.Players.LocalPlayer.Character["1"]:Destroy()
			game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Character.Animate.Disabled = true
			game.Players.LocalPlayer.Character.Animate.Disabled = true
			game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"
			game.Players.LocalPlayer.CharacterRemoving:Wait()	
			
		end)
	end
end)

addLoop(0, function()
	if states.VIEWING ~= nil then
		pcall(function()
			workspace.CurrentCamera.CameraSubject = workspace[states.VIEWING.Name]
		end)
	end
end)

addLoop(0.05, function()
	if states.SPAM_ARRESTING and states.SPAM_ARRESTING.TeamColor.Name == "Really red" then 
		pcall(function()
			local char = workspace:FindFirstChild(states.SPAM_ARRESTING.Name)
			local hum = char and char:FindFirstChild("HumanoidRootPart")
			local head = char and char:FindFirstChild("Head")
	
			local m_char = workspace:FindFirstChild(YourPlayer.UserName)
			local m_hum = m_char and m_char:FindFirstChild("HumanoidRootPart")
			if m_char and m_hum and char and (char or head) then 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = hum and hum.CFrame or head.CFrame * CFrame.new(0, 0, -0.75)
			end
		end)
	end
end)

addLoop(0, function()
	if states.ANTITEAMS == true or states.SPAM_ARRESTING ~= nil then 
		if game.Players.LocalPlayer.TeamColor.Name == "Really red" or game.Players.LocalPlayer.TeamColor.Name == "Bright orange" then
			game:GetService("Workspace").Remote.loadchar:InvokeServer(nil, Color3.fromRGB(0,0,0))
			goTo(917, 100, 2387)
			game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
		end
	end
end)

local function criminpos(Player, pos)
	if Player == nil or not Player.Character then return end
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP)
	if not game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") then
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver.M9.ITEMPICKUP)
	end
	local CHAR = game.Players.LocalPlayer.Character
	CHAR.Humanoid.Name = "1"
	local c = CHAR["1"]:Clone()
	c.Name = "Humanoid"
	c.Parent = CHAR
	CHAR["1"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject = CHAR
	CHAR.Animate.Disabled = true
	wait()
	CHAR.Animate.Disabled = false
	CHAR.Humanoid.DisplayDistanceType = "None"
	local tool = game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") or game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9")
	tool.Parent = CHAR
	local STOP = 0
	repeat wait(.1)
		STOP = STOP + 1
		local get = Player.Character:FindFirstChild("HumanoidRootPart") or Player.Character:FindFirstChild("Torso")
		get.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		spawnlocations[6].CFrame = get.CFrame
		spawnlocations[6].CanCollide = true
		spawnlocations[6].Transparency = 1
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	until (Player.TeamColor.Name == "Really red" or not game.Players.LocalPlayer.Character:FindFirstChild("M9") and not game.Players.LocalPlayer.Character:FindFirstChild("Hammer") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character:FindFirstChild("Torso") or not Player.Character:FindFirstChild("Torso").Parent or STOP > 500 or Player.TeamColor.Name == "Really red") and STOP > 3
	for i = 1,5 do
		wait()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
		local get = Player.Character:FindFirstChild("HumanoidRootPart") or Player.Character:FindFirstChild("Torso")
		spawnlocations[6].CFrame = get.CFrame
		spawnlocations[6].CanCollide = true
		spawnlocations[6].Transparency = 1
	end
	workspace.Remote.loadchar:InvokeServer()

	spawnlocations[6].CFrame = CFrame.new(0,0,0)
end


function bringinpos(Player, pos)
	if Player == nil or not Player.Character then return end
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP)
	if not game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") then
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver.M9.ITEMPICKUP)
	end
	local CHAR = game.Players.LocalPlayer.Character
	CHAR.Humanoid.Name = "1"
	local c = CHAR["1"]:Clone()
	c.Name = "Humanoid"
	c.Parent = CHAR
	CHAR["1"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject = CHAR
	CHAR.Animate.Disabled = true
	wait()
	CHAR.Animate.Disabled = false
	CHAR.Humanoid.DisplayDistanceType = "None"
	local tool = game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Hammer") or game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9")
	tool.Parent = CHAR
	local STOP = 0
	repeat wait(.1)
		STOP = STOP + 1
		local get = Player.Character:FindFirstChild("HumanoidRootPart") or Player.Character:FindFirstChild("Torso")
		get.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -0.45)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	until (Player.TeamColor.Name == "Really red" or not game.Players.LocalPlayer.Character:FindFirstChild("M9") and not game.Players.LocalPlayer.Character:FindFirstChild("Hammer") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character:FindFirstChild("Torso") or not Player.Character:FindFirstChild("Torso").Parent or STOP > 500 or Player.TeamColor.Name == "Really red") and STOP > 3
	for i = 1,5 do
		wait()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	end
	workspace.Remote.loadchar:InvokeServer()
end

addLoop(0.2, function()
	if states.SPAM_ARRESTING ~= nil then
		if states.SPAM_ARRESTING.TeamColor.Name == "Bright orange" then
			bringinpos(states.SPAM_ARRESTING, CFrame.new(917, 78, 2389))
		else
			if states.SPAM_ARRESTING.TeamColor.Name ~= "Really red" then
				criminpos(states.SPAM_ARRESTING, CFrame.new(917, 78, 2389))	
			end
		end
	end
end)

addLoop(0, function()
	if states.SPAM_ARRESTING ~= nil then
		states.SPAM_ARRESTING.Character:FindFirstChild("Torso").Anchored = false
	end
end)

addLoop(0.05, function()
	if states.SPAM_ARRESTING ~= nil then
		if states.SPAM_ARRESTING ~= nil and states.SPAM_ARRESTING.TeamColor.Name ~= "Bright orange" and states.SPAM_ARRESTING.TeamColor.Name ~= "Really red" then
			pcall(function()
				local get = states.SPAM_ARRESTING.Character:FindFirstChild("HumanoidRootPart") or states.SPAM_ARRESTING.Character:FindFirstChild("Torso")
				spawnlocations[6].CFrame = get.CFrame
				spawnlocations[6].CanCollide = false
				spawnlocations[6].Size = Vector3.new(0.1, 0.1, 0.1)
			end)
		else
			pcall(function()
				local get = states.SPAM_ARRESTING.Character:FindFirstChild("HumanoidRootPart") or states.SPAM_ARRESTING.Character:FindFirstChild("Torso")
				spawnlocations[6].CFrame = CFrame.new(0,0,0)
				spawnlocations[6].CanCollide = false
			end)
		end
	end
end)

function removeIndex(array, index)
	for i,v in pairs(array) do
		if v == index then
			table.remove(array, i)
		end
	end
end

-- ADMIN SCRIPTING
function get_command(fromchat, cmd5)
	coroutine.wrap(function()
		local obligatoryprefix = false
	if fromchat == true then
		obligatoryprefix = true
	end
	local args = {}
	local pattern = "%S+"

	for word in string.gmatch(string.lower(cmd5), pattern) do
		table.insert(args, word)
	end

	if args[1] == "/w" then
		removeIndex(args[1])
		removeIndex(args[2])
	end

	if obligatoryprefix == true then
		if string.sub(args[1], 0,1) ~= "." then
			return false
		end
	end

	if string.sub(args[1], 0,1) == "." then
		args[1] = string.sub(args[1],2,#args[1])
	end

	local funct = getcmdfunction(args[1])
	if funct ~= nil then
		pcall(funct, args)
	else
		Notify("Invalid command", colors.Red)
	end
	

	end)()
end

game.Players.LocalPlayer.Chatted:Connect(function(msg)
	get_command(true, msg)
end)

GUI.BAR.cmdbar11.FocusLost:connect(function(enter)
	local close = UDim2.new(-0.500, 0, 0, 910)
	if enter then
		get_command(false, GUI.BAR.cmdbar11.Text)
        GUI.BAR.cmdbar11.Text = " "
	end
	sc.tweenservice:Create(GUI.BAR.Bar, TweenInfo.new(0.3), {Position = close}):Play()
	GUI.BAR.cmdbar11.Text = " "
end)

game:GetService("UserInputService").InputBegan:connect(function(input, process)
	if process then return end

	local open = UDim2.new(0, 0, 0, 910)
	
	if input.KeyCode == Enum.KeyCode.Period then
		sc.tweenservice:Create(GUI.BAR.Bar, TweenInfo.new(0.3), {Position = open}):Play()
		GUI.BAR.cmdbar11:CaptureFocus()
		wait(0.1)
		GUI.BAR.cmdbar11.Text = " "
	end

	if input.KeyCode == Enum.KeyCode.K then
		if states.COMMANDS_GUI == true then
			sc.tweenservice:Create(GUI.CMDGUI.CommandsGUI, TweenInfo.new(0.3), {Position = UDim2.new(-0.500, 0, 0, 673)}):Play()
			states.COMMANDS_GUI = false
		else
			sc.tweenservice:Create(GUI.CMDGUI.CommandsGUI, TweenInfo.new(0.3), {Position = UDim2.new(0, 0, 0, 673)}):Play()
			states.COMMANDS_GUI = true
		end
	end

	if input.KeyCode == Enum.KeyCode.P then
		GUI.OUTPUT.Output.Visible = not GUI.OUTPUT.Output.Visible
	end
end)

--if true will check your messages too
local spyOnMyself = true
--if true will chat the logs publicly (fun, risky)
local public = false
--if true will use /me to stand out
local publicItalics = true
--customize private logs
local privateProperties = {
	Color = GUI.FAVORITE_COLOR; 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}
--////////////////////////////////////////////////////////////////
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

local function onChatted(p,msg)
	if _G.chatSpyInstance == instance then
		if p==player and msg:lower():sub(1,4)=="/spy" then
			states.SPY_CHAT = not states.SPY_CHAT
			wait(0.3)
			StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
		elseif states.SPY_CHAT and (spyOnMyself==true or p~=player) then
			msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
			local hidden = true
			local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
				if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
					hidden = false
				end
			end)
			wait(1)
			conn:Disconnect()
			if hidden and states.SPY_CHAT then
				if public then
					saymsg:FireServer((publicItalics and "/me " or '').."[".. p.Name .."]: "..msg,"All")
				else
					privateProperties.Text = "[".. p.Name .."]: "..msg
					StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
				end
			end
		end
	end
end

for _,p in ipairs(Players:GetPlayers()) do
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end
Players.PlayerAdded:Connect(function(p)
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end)

function unloopkill(arg)
	if not arg or arg == "all" then
		Notify("Cleared loopkills",  colors.Green)
		loopkills = {}
		states.LOOPINGALL = false
	else
		if GetPlayerFromString(arg) then
			removeplayer(GetPlayerFromString(arg), loopkills)
			Notify("Unlooping "..GetPlayerFromString(arg).Name, colors.Red)
		else
			Notify("Player not found", colors.Red) return
		end
	end
end

function loopkill(arg)
	if not arg then Notify("Player not found", colors.Red) return end
	if arg == "all" then
		Notify("Looping all", colors.Green) 
		states.ANTI_TIME_OUT = true
	else
		if GetPlayerFromString(arg) then
			addplayer(GetPlayerFromString(arg), loopkills)
			Notify("Looping "..GetPlayerFromString(arg).Name, colors.Green)
		else
			Notify("Player not found", colors.Red) return
		end
	end
end

local chatFrame = player.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)

table.insert(connections.system, game:GetService("RunService").Stepped:Connect(function()
	if states.ANTI_SPAM_ARREST_LAG == true or states.AFK == true then
		pcall(function()
			for i,player in pairs(game.Players:GetPlayers()) do
				if player ~= game.Players.LocalPlayer then
					for i, part in pairs(player.Character:FindFirstChild("Head"):GetChildren()) do
						if part.Name == "handcuffedGui" then
							part:Destroy()
						end
					end
				end
			end
		end)
	end
end))

table.insert(connections.system, game:GetService("RunService").Stepped:Connect(function()
	if states.ANTI_ARMOR_SPAM == true or states.AFK == true then
		pcall(function()
			for i,player in pairs(game.Players:GetPlayers()) do
				for i, part in pairs(player.Character:GetChildren()) do
					if part.Name == "vest" then
						part:Destroy()
					end
				end
			end
		end)
	end
end))

addcommand({"refresh", "re"}, "", function()
	refreshplayer()
	Notify("Player refreshed", colors.Green)
end)

addcommand({"spawn"}, "", function()
	workspace.Remote.loadchar:InvokeServer()
	game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	Notify("Player spawned", colors.Green)
end)

addcommand({"brightness", "bri"}, "number", function(args)
	if tonumber(args[2]) then
		game.Lighting.Brightness = tonumber(args[2])
		game.Lighting.Ambient = Color3.fromRGB(tonumber(args[2]),tonumber(args[2]),tonumber(args[2]))
		Notify("Brightness changed to "..args[2], colors.Green)
	else
		Notify("Missing number")
	end
end)

addcommand({"walls"}, "on/off", function(args)
	setstate("walls", args[2])

	if states.WALLS == true then
		for _,v in pairs(wallParts) do
			v[1].Parent = workspace
		end
	end

	if states.WALLS == false then
		for _,v in pairs(wallParts) do
			v[1].Parent = nil
		end
	end
end)

addcommand({"doors"}, "on/off", function(args)
	setstate("DOORS", args[2])
				
	if states.DOORS == true then
		game:GetService("Lighting").Doors.Parent = workspace
	end
	if states.DOORS == false then
		workspace.Doors.Parent = game:GetService("Lighting")
	end
end)

addcommand({"rj", "rejoin"}, "", function()
	Notify("Rejoining", colors.Green)
	game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)

addcommand({"on", "off"}, "", function(args)
	local coloruse = colors.Red
	local isEnabled = "disabled"
	if args[1] == "on" then
		coloruse = colors.Green
		isEnabled = "enabled"
	end
	setstate("ANTICRIM", args[1], true)
	setstate("ANTISHIELD", args[1], true)
	setstate("AUTOGUNS", args[1], true)
	setstate("AUTORESPAWN", args[1], true)
	setstate("AUTOLOCK", args[1], true)
	setstate("ANTI_SPAM_ARREST_LAG", args[1], true)
	setstate("ANTI_ARMOR_SPAM", args[1], true)
	coroutine.wrap(function()
		if states.AUTOLOCK == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
		else
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = false
		end
	end)()
	coroutine.wrap(function()
		guns(character())
	end)()
	Notify("States: "..isEnabled, coloruse)
end)

addcommand({"autorespawn", "auto"}, "on/off", function(args)
	setstate("autorespawn", args[2])
end)

addcommand({"autolock", "alock"}, "on/off", function(args)
	if setstate("autolock", args[2]) == true then
		if states.AUTOLOCK == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
            game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
		else
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = false
		end
	end
end)

addcommand({"lock"}, "", function(args)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
	game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
end)

addcommand({"unlock"}, "", function(args)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
	game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = false
end)

addcommand({"autoguns", "aguns"}, "on/off", function(args)
	if setstate("autoguns", args[2]) == true then
		guns(character())
	end
end)

addcommand({"anticrim", "acrim"}, "on/off", function(args)
	setstate("ANTICRIM", args[2])
end)

addcommand({"antiteams", "ateams"}, "on/off", function(args)
	setstate("ANTITEAMS", args[2])
end)

addcommand({"antishield", "ashield"}, "on/off", function(args)
	setstate("ANTISHIELD", args[2])
end)

addcommand({"antiarmorspam", "antialag"}, "on/off", function(args)
	setstate("ANTI_ARMOR_SPAM", args[2])
end)

addcommand({"antiarrestlag", "antisalag"}, "on/off", function(args)
	setstate("ANTI_SPAM_ARREST_LAG", args[2])
end)

addcommand({"antilag", "alag"}, "on/off", function(args)
	setstate("antilag", args[2])
	if states.ANTILAG == true then
		for _,tab in pairs(allparts) do
			tab.Part.Material = Enum.Material.Plastic
		end
	else
		for _,tab in pairs(allparts) do
			tab.Part.Material = tab.Material
		end
	end
	
end)

addcommand({"refreshgui"}, "", function(args)
	game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
	wait(1)
	game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
end)
addcommand({"fastpunch", "fp"}, "on/off", function(args)
	setstate("FAST_PUNCH", args[2])
end)

addcommand({"autospawn", "aspawn"}, "on/off", function(args)
	setstate("autospawn", args[2])
end)

addcommand({"onepunch", "op"}, "on/off", function(args)
	setstate("one_punch", arg2)
	if states.ONE_PUNCH == true then
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local MeleeEvent = ReplicatedStorage:FindFirstChild("meleeEvent")
		local Mouse = game.Players.LocalPlayer:GetMouse()
		local Punch = false
		local Cooldown = false
		states.ONE_PUNCH = true

		local function Punch()
			if not states.ONE_PUNCH then
				Cooldown = true
				local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
				Part.Transparency = 1
				Part.Size = Vector3.new(5, 2, 3)
				Part.CanCollide = false
				local Weld = Instance.new("Weld", Part)
				Weld.Part0 = game.Players.LocalPlayer.Character.Torso
				Weld.Part1 = Part
				Weld.C1 = CFrame.new(0, 0, 2)
				Part.Touched:connect(function(Touch)
					if game.Players:FindFirstChild(Touch.Parent.Name) then
						local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
						if plr.Name ~= game.Players.LocalPlayer.Name then
							Part:Destroy()
							for i = 1,100 do
								MeleeEvent:FireServer(plr)
							end
						end
					end
				end)
				wait(0.9)
				Cooldown = false
				Part:Destroy()
			else
				Cooldown = true
				local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
				Part.Transparency = 1
				Part.Size = Vector3.new(5, 2, 3)
				Part.CanCollide = false
				local Weld = Instance.new("Weld", Part)
				Weld.Part0 = game.Players.LocalPlayer.Character.Torso
				Weld.Part1 = Part
				Weld.C1 = CFrame.new(0, 0, 2)
				Part.Touched:connect(function(Touch)
					if game.Players:FindFirstChild(Touch.Parent.Name) then
						local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
						if plr.Name ~= game.Players.LocalPlayer.Name then
							Part:Destroy()
							for i = 1,100 do
								MeleeEvent:FireServer(plr)
							end
						end
					end
				end)
				wait(0.1)
				Cooldown = false
				Part:Destroy()
			end
		end
		Mouse.KeyDown:connect(function(Key)
			if not Cooldown and states.ONE_PUNCH then
				if Key:lower() == "f" then
					Punch()
				end				
			end
		end)
	end
end)

addcommand({"crudeknife", "knife"}, "", function()
	if game.Players.LocalPlayer.TeamColor.Name ~= "Bright blue" then
		Notify("Getting crudeknife", colors.Green)
		game.Workspace.Remote.ItemHandler:InvokeServer(game.Workspace.Prison_ITEMS.single["Crude Knife"].ITEMPICKUP)
	else
		Notify("Getting crudeknife", colors.Green)
		workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		game.Workspace.Remote.ItemHandler:InvokeServer(game.Workspace.Prison_ITEMS.single["Crude Knife"].ITEMPICKUP)
		workspace.Remote.TeamEvent:FireServer("Bright blue")
	end
end)

addcommand({"hammer"}, "", function()
	if game.Players.LocalPlayer.TeamColor.Name ~= "Bright blue" then
		Notify("Getting crudeknife", colors.Green)
		game.Workspace.Remote.ItemHandler:InvokeServer(game.Workspace.Prison_ITEMS.single["Hammer"].ITEMPICKUP)
	else
		Notify("Getting crudeknife", colors.Green)
		workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		game.Workspace.Remote.ItemHandler:InvokeServer(game.Workspace.Prison_ITEMS.single["Hammer"].ITEMPICKUP)
		workspace.Remote.TeamEvent:FireServer("Bright blue")
	end
end)

addcommand({"guns", "g"}, "", function()
	guns(character())
end)

addcommand({"fakeheadless", "headless"}, "", function()
	setstate("FAKE_HEADLESS", args[2])
	if states.FAKE_HEADLESS == false then
		refreshplayer()
	end
end)

function setgunslot(gun, slotnumber)
	local errors = false
	if not gun then Notify("Gun not found", colors.Red) errors = true end
	if not slotnumber then Notify("Missing slot number", colors.Red) errors = true end
	if slotnumber > 10 then Notify("Max slot number: 10", colors.Red) errors = true end
	if slotnumber < 1 then Notify("Min slot number: 1", colors.Red) errors = true end
	if gun == "M4A1" and states.OWN_SWAT ~= true then Notify("You don't own swat gamepass", colors.Red) errors = true end
	
	if errors == true then return end
	
	if gun == "M4A1" or gun == "Remington 870" or gun == "AK-47" or gun == "M9" then
		local find = table.find(slots, gun)
		if find then
			slots[tonumber(find)] = "nil"
			slots[slotnumber] = gun
		    Notify("New slot "..gun..": "..slotnumber, colors.Green)
		else
			slots[slotnumber] = gun
		    Notify("New slot "..gun..": "..slotnumber, colors.Green)
		end
	end
end

addcommand({"gunorder"}, "gun, number", function()
	setgunslot(GetNameFromList(args[2], items), tonumber(args[3]))
end)


addcommand({"team", "t"}, "team", function(args)
	removeIndex(args, args[1])
	team(args)
end)

addcommand({"givefood","food"}, "player", function(args)
	if not args[2] then
		local giver = workspace.Prison_ITEMS.giver
		local findfood = giver:FindFirstChild("Lunch") or giver:FindFirstChild("Dinner") or giver:FindFirstChild("Breakfast")
		if findfood then
			game.Workspace.Remote.ItemHandler:InvokeServer(findfood.ITEMPICKUP)
		else
			Notify("Wait for Breakfast/Lunch/Dinner time", colors.Red)
		end
	else
		if args[2] == "all" then
			for _,plr in pairs(getplayers()) do
				if plr == game.Players.LocalPlayer then return end
				pcall(function()
					givefood(plr)
				end)
			end
		else
			local plr = GetPlayerFromString(args[2])
			if plr then
				givefood(plr)
			end
		end
	end
end)

addcommand({"givetaser", "taser"}, "player", function(args)
	if args[2] == "all" then
		for _,plr in pairs(getplayers()) do
			if plr == game.Players.LocalPlayer then return end
			pcall(function()
				givetaser(plr)
			end)
		end
	else
		local plr = GetPlayerFromString(args[2])
		if plr then
			givetaser(plr)
		end
	end
	
end)

addcommand({"giveshield", "shield"}, "player", function(args)
	if args[2] == "all" then
		for _,plr in pairs(getplayers()) do
			if plr == game.Players.LocalPlayer then return end
			pcall(function()
				giveshield(plr)
			end)
		end
	else
		local plr = GetPlayerFromString(args[2])
		if plr then
			giveshield(plr)
		end
	end
end)

addcommand({"givecuffs", "cuffs"}, "player", function(args)
	if args[2] == "all" then
		for _,plr in pairs(getplayers()) do
			if plr == game.Players.LocalPlayer then return end
			pcall(function()
				givecuffs(plr)
			end)
		end
	else
		local plr = GetPlayerFromString(args[2])
		if plr then
			givecfuss(plr)
		end
	end
end)

addcommand({"givekey", "key"}, "player", function(args)
	if args[2] == "all" then
		for _,plr in pairs(getplayers()) do
			if plr == game.Players.LocalPlayer then return end
			pcall(function()
				givekey(plr)
			end)
		end
	else
		local plr = GetPlayerFromString(args[2])
		if plr then
			givekey(plr)
		end
	end
end)

addcommand({"walkspeed", "ws"}, "number", function(args)
	local WalkSpeed = tonumber(args[2])
	if WalkSpeed ~= nil then
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeed
		Notify("Walkspeed changed to "..WalkSpeed, colors.Green)
	end
end)

addcommand({"jumppower", "jp"}, "number", function(args)
	local JumpPower = tonumber(args[2])
	if JumpPower ~= nil then
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = JumpPower
		Notify("JumpPower changed to "..JumpPower, colors.Green)
	end
end)

addcommand({"gravity", "gt"}, "number", function(args)
	if tonumber(args[2]) then
		workspace.Gravity = args[2]
		Notify("Gravity changed to "..args[2], colors.Green)
	end
end)

addcommand({"spy"}, "on/off", function(args)
	setstate("SPY_CHAT", args[2])
end)

addcommand({"mutespy"}, "player", function(args)
	local plr = GetPlayerFromString(args[2])
	if plr then
		local displayname = plr.DisplayName.." "
	if plr.Name == plr.DisplayName then
		displayname = ""
	end

	local displaymsg = displayname.."@"..plr.Name

		addplayer(plr, connections.flagged.MuteSpy)
		Notify(displaymsg.." muted from SPY CHAT", colors.Green)
	end
	
end)

addcommand({"unmutespy"}, "player", function(args)
	local plr = GetPlayerFromString(args[2])
	if plr then
		removeplayer(plr, connections.flagged.MuteSpy)
		Notify(plr.Name.." unmuted from SPY CHAT", colors.Red)
	end
end)


-- ANTIABUSERS
function getplayers()
	return game.Players:GetPlayers()
end

addcommand({"timestop", "ts"}, "", function()
	while wait() do
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
		local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]
		
		local function LagSpike()
			if not Gun then return end
			local bullets = {}
	
			for i = 1,20 do
				table.insert(bullets, {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = math.huge,
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
				})	
			end
		
		    game.ReplicatedStorage.ShootEvent:FireServer(bullets, Gun)
		end
		
		game:GetService("RunService").Stepped:connect(function()
			LagSpike()
		end)
	end
end)

addcommand({"endserver", "end"}, "", function()
	Notify("Ending server", colors.Green)
	local PackageSize = 100000
	local SendPackageAmountOfTimes = 5

	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer

	local ItemHandler = workspace:WaitForChild("Remote").ItemHandler
	local ShootEvent = ReplicatedStorage:WaitForChild("ShootEvent")

	ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
	local Tool = Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("Remington 870") or workspace:WaitForChild(Players.LocalPlayer.Name):FindFirstChild("Remington 870")

	local Packet = {
		RayObject = Ray.new(Vector3.new(-1, -1, -1), Vector3.new(1, 1, 1)),
		Distance = math.huge,
		Cframe = CFrame.new(0, 0, 0),
		Hit = workspace:FindFirstChildOfClass("Part")
	}

	local Package = {}

	for i = 1, PackageSize do
		Package[i] = Packet
	end

	for i = 1, SendPackageAmountOfTimes do
		ShootEvent:FireServer(Package, Tool)
	end
end)

addcommand({"crim", "c"}, "player", function(args)
	if args[2] == "all" then
		for _,plr in pairs(getplayers()) do
			if plr ~= game.Players.LocalPlayer and plr.Team.Name ~= "Criminals" then
				local savedpos = GetRO()
				getRoot().CFrame = CFrame.new(734.65, 180.5, 2538.65)
				pcall(function()
					crim(plr, CFrame.new(734.65, 180.5, 2538.65))
				end)
				getRoot().CFrame = savedpos
			end
		end
	else
		local plr = GetPlayerFromString(args[2])
	    if plr then
		    crim(plr, getRoot().CFrame)
	    end
	end
	
end)


addcommand({"bring", "b"}, "player", function(args)
	if args[2] == "all" then
		for _,plr in pairs(getplayers()) do
			if plr ~= game.Players.LocalPlayer then
				pcall(function()
					bring(plr, getRoot().CFrame)
				end)
			end
		end
	else
		local plr = GetPlayerFromString(args[2])
		if plr then
			bring(plr, getRoot().CFrame)
		end
	end
end)

addcommand({"arrest"}, "player", function(args)
	if args[2] == "all" then
		for i,v in pairs(game.Players:GetPlayers()) do
			if v ~= game.Players.LocalPlayer and v.TeamColor.Name == "Really red" then
				arrest2(v)
			end
		end
	else
		arrest2(GetPlayerFromString(args[2]))
	end
end)

addcommand({"antitimeout", "antitime"}, "on/off", function(args)
	setstate("anti_time_out", args[2])
end)

addcommand({"kill", "k"}, "player", function(args)
	if args[2] == "all" then
		for i,v in pairs(game.Players:GetPlayers()) do
			kill1(v, true)
		end
		Notify("Killed all", colors.Green)
	else
		kill1(GetPlayerFromString(args[2]))
	end
end)

addcommand({"loopkill", "lk"}, "player", function(args)
	loopkill(args[2])
end)

addcommand({"detector"}, "on/off", function(args)
	setstate("DETECTOR", args[2])
	local function ifgun(part)
		local gs = {
			"M4A1",
			"M9",
			"Remington 870",
			"AK-47"
		}

		for _,name in pairs(gs) do
			if part.Name == name then
				return true
			end
		end
	end
	
	if states.DETECTOR == true then
		for _,player in pairs(game.Players:GetPlayers()) do
			connections.detector[1] = player.Backpack.ChildAdded:connect(function(child)
				if states.DETECTOR == true and ifgun(child) then
					print(child.Name.." "..player.Name)
				end
				
			end)
		end


		game.Players.PlayerAdded:connect(function(player)
			connections.detector[2] = player.Backpack.ChildAdded:connect(function(child)
				if states.DETECTOR == true and ifgun(child) then
					print(child.Name.." "..player.Name)
				end
			end)
		end)
	else
		connections.detector[1]:Disconnect()
		connections.detector[2]:Disconnect()
	end
end)
addcommand({"unloopkill", "unlk"}, "player", function(args)
	unloopkill(args[2])
end)

addcommand({"godmode", "god"}, "on/off", function(args)
	setstate("god_mode", args[2])
end)

addcommand({"forcefield", "ff"}, "on/off", function(args)
	setstate("forcefield", args[2])

	if states.FORCEFIELD == true then
		ff()
		while wait(4) do
			ff()
			if states.FORCEFIELD == false then
				break
			end
		end
	end
end)

addcommand({"ally"}, "player", function(args)
	local plr = GetPlayerFromString(args[2])
	if plr then
		addplayer(plr, friends)
		Notify(string.upper(GetPlayerFromString(args[2]).Name).." IS NOT VISIBLE", colors.Red)
	end
end)

addcommand({"enemy"}, "player", function(args)
	local plr = GetPlayerFromString(args[2])
	if plr then
		removeplayer(plr, friends)
		Notify(string.upper(GetPlayerFromString(args[2]).Name).." IS VISIBLE", colors.Green)
		for i,v in pairs(game.Lighting:GetChildren()) do
			if v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 then
				v.Parent = game.Workspace
			end
		end
	end
end)

addcommand({"invisible", "invis"}, "", function(args)
	local pos = GetRO()
	local char = game.Players.LocalPlayer.Character
	local root = char:FindFirstChild("HumanoidRootPart")

	goTo(-147, -180, 2015)
	wait(0.5)
	char.Parent = nil
	local newroot = root:Clone()
	newroot.Parent = char
	root:Destroy()
	for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA("Part") and v.Name ~= "HumanoidRootPart" then
			pcall(function()
				v.Transparency = 0.1
			end)
			
		end
	end
	char.Parent = workspace
	newroot.CFrame = pos
end)

addcommand({"goto", "to"}, "player", function(args)
	local plr = GetPlayerFromString(args[2])
	if plr then
		local char = workspace:FindFirstChild(plr.Name)
		local hum = char and char:FindFirstChild("HumanoidRootPart")
		local head = char and char:FindFirstChild("Head")

		local m_char = workspace:FindFirstChild(YourPlayer.UserName)
		local m_hum = m_char and m_char:FindFirstChild("HumanoidRootPart")
		if m_char and m_hum and char and (char or head) then 
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = hum and hum.CFrame or head.CFrame
		end
	end
end)

addcommand({"anticrash", "acrash"}, "on/off", function(args)
	setstate("ANTICRASH", args[2])
	if states.ANTICRASH == false then
		for i,v in pairs(connections.anticrash) do
			v:Enable()
		end
	else
		for i,v in pairs(connections.anticrash) do
			v:Disable()
		end
	end	
end)

addcommand({"anticrim", "acrim"}, "on/off", function(args)
	setstate("anticrim", args[2])
end)

addcommand({"antiinvisible", "ainvis"}, "on/off", function(args)
	setstate("anti_invisible", args[2])
end)

addcommand({"antifling", "afling"}, "on/off", function(args)
	setstate("ANTIFLING", args[2])

	if states.ANTIFLING == false then
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.Name ~= game.Players.LocalPlayer.Name then
				for i,part in pairs(v.Character:GetChildren()) do
					if part:IsA("Part") then
						part.CanCollide = false
						if part.Name == "HumanoidRootPart" then
							part.Transparency = 1
						end
					end
				end
			end
		end
	end
end)
local equipevent = game.ReplicatedStorage:WaitForChild("EquipEvent")

addcommand({"antibring", "ab"}, "on/off", function(args)
	setstate("ANTIBRING", args[2])
	if states.ANTIBRING == true then
		equipevent.Parent = nil
		for _,plr in pairs(game.Players:GetPlayers()) do
			if plr ~= game.Players.LocalPlayer then
				connections.antibring[1] = plr.CharacterAdded:connect(function(char)
					char.ChildRemoved:connect(function(child)
						if child.Name == "Humanoid" then
							if states.ANTI_BRING_GUNS == true or states.ANTIBRING == true then
								char:Destroy()
							end
						end
					end)
				end)
			end
			
		end
		
		game.Players.PlayerAdded:connect(function(plr)
			if plr ~= game.Players.LocalPlayer then
				connections.antibring[2] = plr.CharacterAdded:connect(function(char)
					char.ChildRemoved:connect(function(child)
						if child.Name == "Humanoid" then
							if states.ANTI_BRING_GUNS == true or states.ANTIBRING == true then
								char.Parent = nil
							end
						end
					end)
				end)
			end
		end)
	elseif states.ANTIBRING == false then
		connections.antibring[1]:Disconnect()
		connections.antibring[2]:Disconnect()
		equipevent.Parent = game.ReplicatedStorage
	end
end)

addcommand({"antispam", "aspam"}, "on/off", function(args)
	setstate("antispam", args[2])
end)

addcommand({"prevent"}, "on/off", function(args)
	setstate("prevent", args[2])
end)

addcommand({"removeroot", "noroot"}, "on/off", function(args)
	setstate("ANTIBRING_NO_ROOT", args[2])
end)

addcommand({"copyteam", "ct"}, "player", function(args)
	copyteam(GetPlayerFromString(args[2]))
end)

addcommand({"loopcopyteam", "lct"}, "player", function(args)
	local player = GetPlayerFromString(args[2])
	if player then
		states.LOOP_COPY_TEAM = player
	else
		if args[2] == "off" then
			states.LOOP_COPY_TEAM = nil
		end
	end
end)

addcommand({"view", "v"}, "player", function(args)
	local player = GetPlayerFromString(args[2])

	if player ~= nil then
		states.VIEWING = player
		Notify("Viewing: "..player.Name, colors.Green)
	end
end)

addcommand({"unview", "unv"}, "player", function(args)
	states.VIEWING = nil
	workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
	Notify("Unviewing", colors.Red)
end)

addcommand({"spamarrest", "sa"}, "player", function(args)
	if args[2] then
		if args[2] == "off" then
			states.SPAM_ARRESTING = nil
			Notify("Spam arresting: OFF", colors.Red)
		else
			local plr = GetPlayerFromString(args[2])
			if plr then
				states.SPAM_ARRESTING = plr
				local displayname = plr.DisplayName.." "
				if plr.Name == plr.DisplayName then
					displayname = ""
				end
	
				local displaymsg = displayname.."@"..plr.Name
				Notify("Spam arresting: "..displaymsg, colors.Green)
			end
			
		end
	end
end)

addcommand({"coploop", "cl"}, "on/off", function(args)
	setstate("COPLOOP", args[2])
end)

-- teleports
addcommand({"sky"}, "player", function(args)
	if args[2] == "all" then
		for i,v in pairs(game.Players:GetPlayers()) do
			if v ~= game.Players.LocalPlayer then
				pcall(function()
					bring(v, CFrame.new(769, 10000, 2457))
				end)
			end
		end
	else
		local player = GetPlayerFromString(args[2])
		if player then
			bring(player, CFrame.new(769, 10000, 2457))
		end
	end
end)

addcommand({"back"}, "player/local", function(args)
	local pos = {980, 101, 2327}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
	    goTo(unpack(pos))
	end
end)

addcommand({"nex"}, "player/local", function(args)
	local pos = {917, 100, 2387}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"armory"}, "player/local", function(args)
	local pos = {798,99,2260}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"secretzone"}, "player/local", function(args)
	local pos = {-147, -180, 2015}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"cafe"}, "player/local", function(args)
	local pos = {879, 99, 2247}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"roof"}, "player/local", function(args)
	local pos = {848,118,2332}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"mountain"}, "player/local", function(args)
	local pos = {631, 161, 2746}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"wall"}, "player/local", function(args)
	local pos = {724, 396, 2676}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"yard"}, "player/local", function(args)
	local pos = {738, 97, 2541}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"cells"}, "player/local", function(args)
	local pos = {917, 100, 2415}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"base"}, "player/local", function(args)
	local pos = {-943, 95, 2056}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"pvp"}, "player/local", function(args)
	local pos = {-770, 11, 1491}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"tower"}, "player/local", function(args)
	local pos = {822, 130, 2570}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"garage"}, "player/local", function(args)
	local pos = {614, 98, 2480}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"backcafe"}, "player/local", function(args)
	local pos = {984, 98, 2218}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"cell"}, "player/local", function(args)
	local pos = {877, 99, 2440}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"down"}, "player/local", function(args)
	local pos = {917, 78, 2389}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"city"}, "player/local", function(args)
	local pos = {-259, 54, 2484}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"flag"}, "player/local", function(args)
	local pos = {725, 130, 2518}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)
function send(msg, webhook)
	if (syn.request) then
		syn.request({
			Url = webhook,
			Method = "POST",
			Headers = {
				["Content-Type"] = "application/json"
			},
			Body = game.HttpService:JSONEncode({
				content = msg
		   })
		})
	end
end
addcommand({"neutralzone"}, "player/local", function(args)
	local pos = {881, 27, 2347}
	if GetPlayerFromString(args[2]) then
			bring(GetPlayerFromString(args[2]), CFrame.new(unpack(pos)))
	elseif not args[2] or args[2] == "local" then
		goTo(unpack(pos))
	end
end)

addcommand({"get"}, "player", function(args)
	Notify("Not available yet", colors.Red)
	if GetPlayerFromString(args[2]) then
		send("Exploiter detected: ".."https://www.roblox.com/users/"..GetPlayerFromString(args[2]).UserId.."/profile", YourPlayer.skidurl)
	end
end)

for _,spawn in pairs(spawnlocations) do
	spawn.CFrame = CFrame.new(0,0,0)
end

table.insert(connections.system, game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Home").intro.Content.menus.teamsGui.Guards.Button.MouseButton1Down:connect(function()
	local players = GetPlayersInTeam("Guards")
	if #players > 7 then return end
	sc.tweenservice:Create(GUI.FadeFrameFake, TweenInfo.new(1), {BackgroundTransparency = 0}):Play()
	wait(1)
	sc.tweenservice:Create(GUI.FadeFrameFake, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
end))

table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.ANTIBRING == true then
		pcall(function()
			game.Players.LocalPlayer.Character:WaitForChild("Animate").toolnone.ToolNoneAnim.AnimationId = ""
		end)
	end
end))

table.insert(connections.system, game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Home").intro.Content.menus.teamsGui.Prisoners.Button.MouseButton1Down:connect(function()
	sc.tweenservice:Create(GUI.FadeFrameFake, TweenInfo.new(1), {BackgroundTransparency = 0}):Play()
	wait(1)
	sc.tweenservice:Create(GUI.FadeFrameFake, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
end))

table.insert(connections.system, game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Home").hud.MenuButton.MenuFrame.respawn.MouseButton1Down:connect(function()
	sc.tweenservice:Create(GUI.FadeFrameFake, TweenInfo.new(0.7), {BackgroundTransparency = 0}):Play()
	wait(1)
	sc.tweenservice:Create(GUI.FadeFrameFake, TweenInfo.new(0.7), {BackgroundTransparency = 1}):Play()
end))

table.insert(connections.system, game:GetService("RunService").Stepped:connect(function()
	if states.PREVENT == true then
		pcall(function()
			workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		end)
	end
end))

-- COMMANDS LIST

function IsEven(num)
	return num % 2 == 0
end

local longestText = 0

for i,v in pairs(cmdslist) do
	local clone = GUI.CMDGUI.TextLabel:Clone()
	clone.Parent = GUI.CMDGUI.SF2
	clone.Text = GUI.CMDGUI.TextLabel.Text..v
	local textSize = game:GetService("TextService"):GetTextSize(GUI.CMDGUI.TextLabel.Text..v,GUI.CMDGUI.TextLabel.TextSize,GUI.CMDGUI.TextLabel.Font,GUI.CMDGUI.TextLabel.AbsoluteSize)
	if textSize.X > longestText then
		longestText = textSize.X
	end
	clone.LayoutOrder = i
end

GUI.CMDGUI.SF2.CanvasSize = UDim2.new(0,longestText,0,GUI.CMDGUI.TextLabel.TextSize * #cmdslist + 200)

game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Home"):WaitForChild("fadeFrame").Visible = false

-- LOADED
wait(0.3)
ADMINLOADED = true
